{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "BarChart.svelte",
    "ColumnChart.svelte",
    "LineChart.svelte",
    "ScatterChart.svelte",
    "AxisX.svelte",
    "AxisY.svelte",
    "Footer.svelte",
    "Labels.svelte",
    "Legend.svelte",
    "Line.svelte",
    "Title.svelte",
    "Voronoi.svelte",
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "App.svelte",
    "DataTeamFooter.svelte",
    "DataTeamHeader.svelte",
    "Divider.svelte",
    "Filler.svelte",
    "Header.svelte",
    "Media.svelte",
    "Scroller.svelte",
    "Table.svelte",
    "Arrow.svelte"
  ],
  "sourcesContent": [
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg } from \"layercake\";\n\timport {\n\t\tscaleBand,\n\t\tscaleOrdinal,\n\t\tscaleLinear,\n\t\tscaleSymlog,\n\t} from \"d3-scale\";\n\timport { tweened } from \"svelte/motion\";\n\timport { cubicInOut } from \"svelte/easing\";\n\timport { groupData, stackData } from \"../js/utils\";\n\n\timport SetCoords from \"./shared/SetCoords.svelte\";\n\timport Bar from \"./shared/Bar.svelte\";\n\timport AxisX from \"./shared/AxisX.svelte\";\n\timport AxisY from \"./shared/AxisY.svelte\";\n\timport Legend from \"./shared/Legend.svelte\";\n\timport Title from \"./shared/Title.svelte\";\n\timport Footer from \"./shared/Footer.svelte\";\n\timport Labels from \"./shared/Labels.svelte\";\n\n\texport let data;\n\texport let height = 250; // number of pixels or valid css height string\n\texport let animation = true;\n\texport let duration = 800;\n\texport let xKey = \"x\";\n\texport let yKey = \"y\";\n\texport let zKey = null;\n\texport let idKey = yKey;\n\texport let labelKey = null;\n\texport let labels = false;\n\texport let xScale = \"linear\";\n\texport let xFormatTick = (d) => d;\n\texport let xMax = null;\n\texport let xMin = 0;\n\texport let xAxis = true;\n\texport let yAxis = true;\n\texport let xTicks = 4;\n\texport let textColor = \"#666\";\n\texport let tickColor = \"#ccc\";\n\texport let tickDashed = false;\n\texport let title = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let snapTicks = false;\n\texport let mode = \"default\"; // options: 'default', 'comparison', 'marker', 'stacked', 'grouped'\n\texport let padding = { top: 0, bottom: 20, left: 35, right: 0 };\n\texport let color = null;\n\texport let colors = color\n\t\t? [color]\n\t\t: [\n\t\t\t\t\"#206095\",\n\t\t\t\t\"#A8BD3A\",\n\t\t\t\t\"#003C57\",\n\t\t\t\t\"#27A0CC\",\n\t\t\t\t\"#118C7B\",\n\t\t\t\t\"#F66068\",\n\t\t\t\t\"#746CB1\",\n\t\t\t\t\"#22D0B6\",\n\t\t\t\t\"lightgrey\",\n\t\t  ];\n\texport let markerWidth = 2.5;\n\texport let spacing = 0.05; // proportion of bar width (1 = 100%)\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null;\n\texport let colorHover = \"black\";\n\texport let select = false;\n\texport let selected = null;\n\texport let colorSelect = \"orange\";\n\texport let highlighted = [];\n\texport let colorHighlight = \"black\";\n\texport let overlayFill = false;\n\texport let type = null;\n\texport let prefixLabel = \"\";\n\texport let vertLabShift = 0;\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut,\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n\n\tconst distinct = (d, i, arr) => arr.indexOf(d) == i;\n\n\tfunction getTotals(data, keys) {\n\t\tlet arr = [];\n\t\tkeys.forEach((key) => {\n\t\t\tlet vals = data.filter((d) => d[yKey] == key).map((d) => d[xKey]);\n\t\t\tlet sum = vals.reduce((a, b) => a + b, 0);\n\t\t\tarr.push(sum);\n\t\t});\n\t\treturn arr;\n\t}\n\n\t// Functions to update xDomain\n\tconst xDomSet = (data, mode, xKey, xMax) =>\n\t\txMax\n\t\t\t? [xMin, xMax]\n\t\t\t: mode == \"stacked\" && zKey\n\t\t\t  ? [\n\t\t\t\t\t\txMin,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t...getTotals(\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tdata.map((d) => d[yKey]).filter(distinct),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t    ]\n\t\t\t  : [xMin, Math.max(...data.map((d) => d[xKey]))];\n\tfunction xDomUpdate(data, mode, xKey, xMax) {\n\t\tlet newXDom = xDomSet(data, mode, xKey, xMax);\n\t\tif (newXDom[0] != xDom[0] || newXDom[1] != xDom[1]) {\n\t\t\txDomain.set(newXDom, { duration: animation ? duration : 0 });\n\t\t\txDom = newXDom;\n\t\t}\n\t}\n\tlet xDom = xDomSet(data, mode, xKey, xMax);\n\tconst xDomain = tweened(xDom, tweenOptions);\n\t$: xDomUpdate(data, mode, xKey, xMax);\n\n\t// Functions to update yDomain & zDomain\n\t$: yDomain = data.map((d) => d[yKey]).filter(distinct);\n\t$: zDomain = zKey ? data.map((d) => d[zKey]).filter(distinct) : null;\n\n\t// Create a data series for each zKey (group)\n\t$: groupedData =\n\t\tmode == \"stacked\"\n\t\t\t? stackData(data, zDomain, xKey, zKey)\n\t\t\t: groupData(data, zDomain, zKey);\n</script>\n\n{#if title}\n\t<Title>{title}</Title>\n{/if}\n<slot name=\"options\" />\n<div\n\tclass=\"chart-container\"\n\tstyle=\"height: {typeof height == 'number' ? height + 'px' : height}\"\n>\n\t<LayerCake\n\t\t{padding}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\txDomain={$xDomain}\n\t\t{yDomain}\n\t\txScale={xScale == \"log\" ? scaleSymlog() : scaleLinear()}\n\t\tyScale={scaleBand().paddingInner([spacing]).round(true)}\n\t\tzScale={scaleOrdinal()}\n\t\t{zDomain}\n\t\tzRange={colors}\n\t\tdata={groupedData}\n\t\tflatData={data}\n\t\tcustom={{\n\t\t\ttype: \"bar\",\n\t\t\tmode,\n\t\t\tidKey,\n\t\t\tlabels,\n\t\t\tlabelKey,\n\t\t\tcoords,\n\t\t\tmarkerWidth,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n\t\t\tanimation,\n\t\t\tduration,\n\t\t}}\n\t\tlet:width\n\t>\n\t\t{#if width > 80}\n\t\t\t<!-- Hack to prevent rendering before xRange/yRange initialised -->\n\t\t\t<SetCoords />\n\t\t\t<slot name=\"back\" />\n\t\t\t<Svg pointerEvents={interactive}>\n\t\t\t\t{#if xAxis}\n\t\t\t\t\t<AxisX\n\t\t\t\t\t\tticks={xTicks}\n\t\t\t\t\t\tformatTick={xFormatTick}\n\t\t\t\t\t\t{snapTicks}\n\t\t\t\t\t\tprefix={xPrefix}\n\t\t\t\t\t\tsuffix={xSuffix}\n\t\t\t\t\t\t{textColor}\n\t\t\t\t\t\t{tickColor}\n\t\t\t\t\t\t{tickDashed}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t{#if yAxis}\n\t\t\t\t\t<AxisY\n\t\t\t\t\t\tgridlines={false}\n\t\t\t\t\t\tprefix={yPrefix}\n\t\t\t\t\t\tsuffix={ySuffix}\n\t\t\t\t\t\t{textColor}\n\t\t\t\t\t\t{tickColor}\n\t\t\t\t\t\t{tickDashed}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t<Bar\n\t\t\t\t\t{select}\n\t\t\t\t\tbind:selected\n\t\t\t\t\t{hover}\n\t\t\t\t\tbind:hovered\n\t\t\t\t\t{highlighted}\n\t\t\t\t\ton:hover\n\t\t\t\t\ton:select\n\t\t\t\t\t{overlayFill}\n\t\t\t\t/>\n\t\t\t\t{#if labels}\n\t\t\t\t\t<Labels\n\t\t\t\t\t\t{hovered}\n\t\t\t\t\t\t{selected}\n\t\t\t\t\t\t{yKey}\n\t\t\t\t\t\t{prefixLabel}\n\t\t\t\t\t\t{vertLabShift}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t<slot name=\"svg\" />\n\t\t\t</Svg>\n\t\t\t<slot name=\"front\" />\n\t\t{/if}\n\t</LayerCake>\n</div>\n{#if legend && zDomain}\n\t<Legend\n\t\tdomain={zDomain}\n\t\t{colors}\n\t\t{markerWidth}\n\t\thorizontal={false}\n\t\tline={mode == \"barcode\"}\n\t\tcomparison={mode == \"comparison\"}\n\t/>\n{/if}\n{#if footer}\n\t<Footer>{footer}</Footer>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n</style>\n",
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg } from 'layercake';\n\timport { scaleBand, scaleOrdinal, scaleLinear, scaleSymlog } from 'd3-scale';\n  import { tweened } from 'svelte/motion';\n\timport { cubicInOut } from 'svelte/easing';\n\timport { groupData, stackData } from '../js/utils';\n\n\timport SetCoords from './shared/SetCoords.svelte';\n\timport Column from './shared/Column.svelte';\n\timport AxisX from './shared/AxisX.svelte';\n\timport AxisY from './shared/AxisY.svelte';\n\timport Legend from './shared/Legend.svelte';\n\timport Title from './shared/Title.svelte';\n\timport Footer from './shared/Footer.svelte';\n\n  export let data;\n\texport let height = 250; // number of pixels or valid css height string\n  export let animation = true;\n  export let duration = 800;\n\texport let xKey = 'x';\n\texport let yKey = 'y';\n\texport let zKey = null;\n\texport let idKey = xKey;\n\texport let yScale = 'linear';\n\texport let yFormatTick = d => d;\n\texport let yMax = null;\n\texport let yMin = 0;\n  export let xAxis = true;\n  export let yAxis = true;\n\texport let yTicks = 4;\n\texport let title = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let mode = 'default'; // options: 'default', 'comparison', 'marker', 'stacked', 'grouped'\n\texport let padding = { top: 0, bottom: 20, left: 35, right: 0 };\n\texport let color = null;\n\texport let colors = color ? [color] : ['#206095', '#A8BD3A', '#003C57', '#27A0CC', '#118C7B', '#F66068', '#746CB1', '#22D0B6', 'lightgrey'];\n\texport let markerWidth = 2.5\n\texport let spacing = 0.05 // proportion of bar width (1 = 100%)\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null;\n\texport let colorHover = 'orange';\n\texport let select = false;\n\texport let selected = null;\n\texport let colorSelect = 'black';\n\texport let highlighted = [];\n\texport let colorHighlight = 'black';\n\texport let overlayFill = false;\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n\n\tconst distinct = (d, i, arr) => arr.indexOf(d) ==  i;\n\n\tfunction getTotals(data, keys) {\n\t\tlet arr = [];\n\t\tkeys.forEach(key => {\n\t\t\tlet vals = data.filter(d => d[xKey] == key).map(d => d[yKey]);\n\t\t\tlet sum = vals.reduce((a, b) => a + b, 0);\n\t\t\tarr.push(sum);\n\t\t});\n\t\treturn arr;\n\t}\n\n\t// Functions to animate yDomain\n\tconst yDomSet = (data, mode, yKey, yMax) => yMax ? [yMin, yMax] : mode == 'stacked' && yKey ? [yMin, Math.max(...getTotals(data, data.map(d => d[xKey]).filter(distinct)))] : [yMin, Math.max(...data.map(d => d[yKey]))];\n\tfunction yDomUpdate(data, mode, yKey, yMax) {\n\t\tlet newYDom = yDomSet(data, mode, yKey, yMax);\n\t\tif (newYDom[0] != yDom[0] || newYDom[1] != yDom[1]) {\n\t\t\tyDomain.set(newYDom, {duration: animation ? duration : 0});\n\t\t\tyDom = newYDom;\n\t\t}\n\t}\n\tlet yDom = yDomSet(data, mode, yKey, yMax);\n\tconst yDomain = tweened(yDom, tweenOptions);\n\t$: yDomUpdate(data, mode, yKey, yMax);\n\n\t// Functions to update xDomain & zDomain\n\t$: xDomain = data.map(d => d[xKey]).filter(distinct);\n\t$: zDomain = zKey ? data.map(d => d[zKey]).filter(distinct) : null;\n\n\t// Create a data series for each zKey (group)\n\t$: groupedData = mode == 'stacked' ? stackData(data, zDomain, yKey, zKey) : groupData(data, zDomain, zKey);\n</script>\n\n{#if title}\n  <Title>{title}</Title>\n{/if}\n<slot name=\"options\"/>\n<div class=\"chart-container\" style=\"height: {typeof height == 'number' ? height + 'px' : height }\">\n\t<LayerCake\n\t\t{padding}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\t{xDomain}\n\t\tyDomain={$yDomain}\n\t\t{zDomain}\n\t\txScale={scaleBand().paddingInner([spacing]).round(true)}\n\t\tyScale={yScale == 'log' ? scaleSymlog() : scaleLinear()}\n\t\tzScale={scaleOrdinal()}\n\t\tzRange={colors}\n\t\tdata={groupedData}\n\t\tflatData={data}\n\t\tcustom={{\n\t\t\ttype: 'column',\n\t\t\tmode,\n\t\t\tidKey,\n      coords,\n\t\t\tmarkerWidth,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n      animation,\n      duration\n    }}\n\t\tlet:width\n\t>\n\t  {#if width > 80} <!-- Hack to prevent rendering before xRange/yRange initialised -->\n\t\t<SetCoords/>\n\t  <slot name=\"back\"/>\n\t\t<Svg pointerEvents={interactive}>\n      {#if xAxis}\n\t\t\t  <AxisX gridlines={false} prefix={xPrefix} suffix={xSuffix}/>\n      {/if}\n      {#if yAxis}\n\t\t\t  <AxisY ticks={yTicks} formatTick={yFormatTick} prefix={yPrefix} suffix={ySuffix}/>\n      {/if}\n\t\t\t<Column {select} {selected} {hover} {hovered} {highlighted} on:hover on:select {overlayFill}/>\n\t\t\t<slot name=\"svg\"/>\n\t\t</Svg>\n\t  <slot name=\"front\"/>\n\t\t{/if}\n\t</LayerCake>\n</div>\n{#if legend && zDomain}\n  <Legend domain={zDomain} {colors} {markerWidth} line={mode == 'barcode'} comparison={mode == 'comparison'}/>\n{/if}\n{#if footer}\n  <Footer>{footer}</Footer>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n</style>",
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg } from \"layercake\";\n\timport { scaleOrdinal, scaleLinear, scaleSymlog } from \"d3-scale\";\n\timport { tweened } from \"svelte/motion\";\n\timport { cubicInOut } from \"svelte/easing\";\n\timport { groupData, stackData } from \"../js/utils\";\n\n\timport SetCoords from \"./shared/SetCoords.svelte\";\n\timport Line from \"./shared/Line.svelte\";\n\timport Area from \"./shared/Area.svelte\";\n\timport AxisX from \"./shared/AxisX.svelte\";\n\timport AxisY from \"./shared/AxisY.svelte\";\n\timport Legend from \"./shared/Legend.svelte\";\n\timport Title from \"./shared/Title.svelte\";\n\timport Footer from \"./shared/Footer.svelte\";\n\timport Labels from \"./shared/Labels.svelte\";\n\n\texport let data;\n\texport let height = 250; // number of pixels or valid css height string\n\texport let animation = true;\n\texport let duration = 800;\n\texport let xKey = \"x\";\n\texport let yKey = \"y\";\n\texport let zKey = null;\n\texport let idKey = zKey;\n\texport let labelKey = idKey;\n\texport let yScale = \"linear\";\n\texport let yFormatTick = (d) => d;\n\texport let yMax = null;\n\texport let yMin = 0;\n\texport let xAxis = true;\n\texport let yAxis = true;\n\texport let xTicks = 4;\n\texport let yTicks = 4;\n\texport let title = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let labels = false;\n\texport let snapTicks = true;\n\texport let line = true;\n\texport let area = true;\n\texport let mode = \"default\";\n\texport let areaOpacity = 1;\n\texport let padding = { top: 0, bottom: 20, left: 35, right: 0 };\n\texport let color = null;\n\texport let colors = color\n\t\t? [color]\n\t\t: [\n\t\t\t\t\"#206095\",\n\t\t\t\t\"#A8BD3A\",\n\t\t\t\t\"#003C57\",\n\t\t\t\t\"#27A0CC\",\n\t\t\t\t\"#118C7B\",\n\t\t\t\t\"#F66068\",\n\t\t\t\t\"#746CB1\",\n\t\t\t\t\"#22D0B6\",\n\t\t\t\t\"lightgrey\",\n\t\t  ];\n\texport let lineWidth = 2.5;\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null;\n\texport let colorHover = \"orange\";\n\texport let select = false;\n\texport let selected = null;\n\texport let colorSelect = \"#206095\";\n\texport let highlighted = [];\n\texport let colorHighlight = \"#206095\";\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut,\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n\n\tconst distinct = (d, i, arr) => arr.indexOf(d) == i;\n\n\tfunction getTotals(data, keys) {\n\t\tlet arr = [];\n\t\tkeys.forEach((key) => {\n\t\t\tlet vals = data.filter((d) => d[xKey] == key).map((d) => d[yKey]);\n\t\t\tlet sum = vals.reduce((acc, curr) => acc + curr);\n\t\t\tarr.push(sum);\n\t\t});\n\t\treturn arr;\n\t}\n\n\t// Functions to animate yDomain\n\tconst yDomSet = (data, mode, yKey, yMax) =>\n\t\tyMax\n\t\t\t? [yMin, yMax]\n\t\t\t: mode == \"stacked\" && yKey\n\t\t\t  ? [\n\t\t\t\t\t\tyMin,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t...getTotals(\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tdata.map((d) => d[xKey]).filter(distinct),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t    ]\n\t\t\t  : [yMin, Math.max(...data.map((d) => d[yKey]))];\n\tfunction yDomUpdate(data, mode, yKey, yMax) {\n\t\tlet newYDom = yDomSet(data, mode, yKey, yMax);\n\t\tif (newYDom[0] != yDom[0] || newYDom[1] != yDom[1]) {\n\t\t\tyDomain.set(newYDom, { duration: animation ? duration : 0 });\n\t\t\tyDom = newYDom;\n\t\t}\n\t}\n\tlet yDom = yDomSet(data, mode, yKey, yMax);\n\tconst yDomain = tweened(yDom, tweenOptions);\n\t$: yDomUpdate(data, mode, yKey, yMax);\n\n\t// Function to update zDomain\n\t$: zDomain = zKey ? data.map((d) => d[zKey]).filter(distinct) : null;\n\n\t// Create a data series for each zKey (group)\n\t$: groupedData =\n\t\tmode == \"stacked\"\n\t\t\t? stackData(data, zDomain, yKey, zKey)\n\t\t\t: groupData(data, zDomain, zKey);\n</script>\n\n{#if title}\n\t<Title>{title}</Title>\n{/if}\n<slot name=\"options\" />\n<div\n\tclass=\"chart-container\"\n\tstyle=\"height: {typeof height == 'number' ? height + 'px' : height}\"\n>\n\t<LayerCake\n\t\t{padding}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\tyDomain={$yDomain}\n\t\tyScale={yScale == \"log\" ? scaleSymlog() : scaleLinear()}\n\t\tzScale={scaleOrdinal()}\n\t\t{zDomain}\n\t\tzRange={colors}\n\t\tdata={groupedData}\n\t\tflatData={data}\n\t\tcustom={{\n\t\t\ttype: \"line\",\n\t\t\tmode,\n\t\t\tidKey,\n\t\t\tlabelKey,\n\t\t\tcoords,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n\t\t\tanimation,\n\t\t\tduration,\n\t\t}}\n\t\tlet:width\n\t>\n\t\t{#if width > 80}\n\t\t\t<!-- Hack to prevent rendering before xRange/yRange initialised -->\n\t\t\t<SetCoords />\n\t\t\t<slot name=\"back\" />\n\t\t\t<Svg pointerEvents={interactive}>\n\t\t\t\t{#if xAxis}\n\t\t\t\t\t<AxisX\n\t\t\t\t\t\tticks={xTicks}\n\t\t\t\t\t\t{snapTicks}\n\t\t\t\t\t\tprefix={xPrefix}\n\t\t\t\t\t\tsuffix={xSuffix}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t{#if yAxis}\n\t\t\t\t\t<AxisY\n\t\t\t\t\t\tticks={yTicks}\n\t\t\t\t\t\tformatTick={yFormatTick}\n\t\t\t\t\t\tprefix={yPrefix}\n\t\t\t\t\t\tsuffix={ySuffix}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t{#if area}\n\t\t\t\t\t<Area {mode} opacity={areaOpacity} />\n\t\t\t\t{/if}\n\t\t\t\t{#if line}\n\t\t\t\t\t<Line\n\t\t\t\t\t\t{lineWidth}\n\t\t\t\t\t\t{select}\n\t\t\t\t\t\tbind:selected\n\t\t\t\t\t\t{hover}\n\t\t\t\t\t\tbind:hovered\n\t\t\t\t\t\t{highlighted}\n\t\t\t\t\t\ton:hover\n\t\t\t\t\t\ton:select\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t{#if labels}\n\t\t\t\t\t<Labels {hovered} {selected} />\n\t\t\t\t{/if}\n\t\t\t\t<slot name=\"svg\" />\n\t\t\t</Svg>\n\t\t\t<slot name=\"front\" />\n\t\t{/if}\n\t</LayerCake>\n</div>\n{#if legend && zDomain}\n\t<Legend domain={zDomain} {colors} {line} markerWidth={lineWidth} />\n{/if}\n{#if footer}\n\t<Footer>{footer}</Footer>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n</style>\n",
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg } from \"layercake\";\n\timport { scaleOrdinal, scaleLinear, scaleSymlog } from \"d3-scale\";\n\timport { tweened } from \"svelte/motion\";\n\timport { cubicInOut } from \"svelte/easing\";\n\n\timport SetCoords from \"./shared/SetCoords.svelte\";\n\timport Scatter from \"./shared/Scatter.svg.svelte\";\n\timport Voronoi from \"./shared/Voronoi.svelte\";\n\timport AxisX from \"./shared/AxisX.svelte\";\n\timport AxisY from \"./shared/AxisY.svelte\";\n\timport Legend from \"./shared/Legend.svelte\";\n\timport Title from \"./shared/Title.svelte\";\n\timport Footer from \"./shared/Footer.svelte\";\n\timport Labels from \"./shared/Labels.svelte\";\n\n\texport let data;\n\texport let height = 250; // number of pixels or valid css height string\n\texport let animation = true;\n\texport let duration = 800;\n\texport let xKey = \"x\";\n\texport let yKey = null;\n\texport let zKey = null;\n\texport let rKey = null;\n\texport let idKey = xKey;\n\texport let labelKey = idKey;\n\texport let xScale = \"linear\";\n\texport let yScale = \"linear\";\n\texport let xFormatTick = (d) => d;\n\texport let yFormatTick = (d) => d;\n\texport let xMax = null;\n\texport let xMin = null;\n\texport let yMax = null;\n\texport let yMin = null;\n\texport let xAxis = true;\n\texport let yAxis = true;\n\texport let xTicks = 4;\n\texport let yTicks = 4;\n\texport let textColor = \"#666\";\n\texport let tickColor = \"#ccc\";\n\texport let tickDashed = false;\n\texport let title = null;\n\texport let footer = null;\n\texport let legend = false;\n\texport let labels = false;\n\texport let snapTicks = false;\n\texport let padding = { top: 0, bottom: 20, left: 35, right: 0 };\n\texport let buffer = 5;\n\texport let color = null;\n\texport let colors = color\n\t\t? [color]\n\t\t: [\n\t\t\t\t\"#206095\",\n\t\t\t\t\"#A8BD3A\",\n\t\t\t\t\"#003C57\",\n\t\t\t\t\"#27A0CC\",\n\t\t\t\t\"#118C7B\",\n\t\t\t\t\"#F66068\",\n\t\t\t\t\"#746CB1\",\n\t\t\t\t\"#22D0B6\",\n\t\t\t\t\"lightgrey\",\n\t\t  ];\n\texport let r = 4;\n\texport let interactive = true;\n\texport let xPrefix = \"\";\n\texport let xSuffix = \"\";\n\texport let yPrefix = \"\";\n\texport let ySuffix = \"\";\n\texport let hover = false;\n\texport let hovered = null;\n\texport let colorHover = \"orange\";\n\texport let select = false;\n\texport let selected = null;\n\texport let colorSelect = \"orange\";\n\texport let highlighted = [];\n\texport let colorHighlight = \"black\";\n\texport let overlayFill = false;\n\n\tconst tweenOptions = {\n\t\tduration: duration,\n\t\teasing: cubicInOut,\n\t};\n\tconst coords = tweened(undefined, tweenOptions);\n\n\tconst distinct = (d, i, arr) => arr.indexOf(d) == i;\n\n\tfunction domGet(data, key, min, max) {\n\t\tlet vals = data.map((d) => d[key]);\n\t\treturn [\n\t\t\tmin ? min : vals[0] ? Math.min(...vals) : -1,\n\t\t\tmax ? max : vals[0] ? Math.max(...vals) : 1,\n\t\t];\n\t}\n\tfunction xDomUpdate(data, key, min, max) {\n\t\tlet newDom = domGet(data, key, min, max);\n\t\tif (newDom[0] != xDom[0] || newDom[1] != xDom[1]) {\n\t\t\txDomain.set(newDom);\n\t\t\txDom = newDom;\n\t\t}\n\t}\n\tfunction yDomUpdate(data, key, min, max) {\n\t\tlet newDom = key ? domGet(data, key, min, max) : yDom;\n\t\tif (newDom[0] != yDom[0] || newDom[1] != yDom[1]) {\n\t\t\tyDomain.set(newDom, { duration: animation ? duration : 0 });\n\t\t\tyDom = newDom;\n\t\t}\n\t}\n\tlet xDom = domGet(data, xKey, xMin, xMax);\n\tconst xDomain = tweened(xDom, tweenOptions);\n\tlet yDom = domGet(data, yKey, yMin, yMax);\n\tconst yDomain = tweened(yDom, tweenOptions);\n\n\t$: xDomUpdate(data, xKey, xMin, xMax);\n\t$: yDomUpdate(data, yKey, yMin, yMax);\n\t$: zDomain = zKey ? data.map((d) => d[zKey]).filter(distinct) : null;\n</script>\n\n{#if title}\n\t<Title>{title}</Title>\n{/if}\n<slot name=\"options\" />\n<div\n\tclass=\"chart-container\"\n\tstyle=\"height: {typeof height == 'number' ? height + 'px' : height}\"\n>\n\t<LayerCake\n\t\t{padding}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\tr={rKey}\n\t\txScale={xScale == \"log\" ? scaleSymlog() : scaleLinear()}\n\t\tyScale={yScale == \"log\" ? scaleSymlog() : scaleLinear()}\n\t\tzScale={scaleOrdinal()}\n\t\txDomain={$xDomain}\n\t\tyDomain={$yDomain}\n\t\t{zDomain}\n\t\tzRange={colors}\n\t\trRange={Array.isArray(r) ? r : [r, r]}\n\t\t{data}\n\t\txPadding={[buffer, buffer]}\n\t\tyPadding={yKey ? [buffer, buffer] : null}\n\t\tcustom={{\n\t\t\ttype: \"scatter\",\n\t\t\tidKey,\n\t\t\tlabelKey,\n\t\t\tcoords,\n\t\t\tcolorSelect,\n\t\t\tcolorHover,\n\t\t\tcolorHighlight,\n\t\t\tpadding: 1,\n\t\t\tanimation,\n\t\t\tduration,\n\t\t}}\n\t\tlet:width\n\t>\n\t\t{#if width > 80}\n\t\t\t<!-- Hack to prevent rendering before xRange/yRange initialised -->\n\t\t\t<SetCoords />\n\t\t\t<slot name=\"back\" />\n\t\t\t<Svg pointerEvents={interactive}>\n\t\t\t\t{#if xAxis}\n\t\t\t\t\t<AxisX\n\t\t\t\t\t\tticks={xTicks}\n\t\t\t\t\t\tformatTick={xFormatTick}\n\t\t\t\t\t\t{snapTicks}\n\t\t\t\t\t\tprefix={xPrefix}\n\t\t\t\t\t\tsuffix={xSuffix}\n\t\t\t\t\t\t{textColor}\n\t\t\t\t\t\t{tickColor}\n\t\t\t\t\t\t{tickDashed}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t{#if yAxis && yKey}\n\t\t\t\t\t<AxisY\n\t\t\t\t\t\tticks={yTicks}\n\t\t\t\t\t\tformatTick={yFormatTick}\n\t\t\t\t\t\tprefix={yPrefix}\n\t\t\t\t\t\tsuffix={ySuffix}\n\t\t\t\t\t\t{textColor}\n\t\t\t\t\t\t{tickColor}\n\t\t\t\t\t\t{tickDashed}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t<Scatter {selected} {hovered} {highlighted} {overlayFill} />\n\t\t\t\t{#if select || hover}\n\t\t\t\t\t<Voronoi\n\t\t\t\t\t\t{select}\n\t\t\t\t\t\tbind:selected\n\t\t\t\t\t\t{hover}\n\t\t\t\t\t\tbind:hovered\n\t\t\t\t\t\t{highlighted}\n\t\t\t\t\t\ton:hover\n\t\t\t\t\t\ton:select\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t\t{#if labels}\n\t\t\t\t\t<Labels {hovered} {selected} />\n\t\t\t\t{/if}\n\t\t\t\t<slot name=\"svg\" />\n\t\t\t</Svg>\n\t\t\t<slot name=\"front\" />\n\t\t{/if}\n\t</LayerCake>\n</div>\n{#if legend && zDomain}\n\t<Legend\n\t\tdomain={zDomain}\n\t\t{colors}\n\t\tmarkerLength={Array.isArray(r) ? r[0] * 2 : r * 2}\n\t\tround={true}\n\t/>\n{/if}\n{#if footer}\n\t<Footer>{footer}</Footer>\n{/if}\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from \"svelte\";\n\n\tconst { width, height, xScale, yRange } = getContext(\"LayerCake\");\n\n\texport let gridlines = true;\n\texport let tickDashed = false;\n\texport let tickMarks = false;\n\texport let tickColor = \"#bbb\";\n\texport let textColor = \"#666\";\n\texport let formatTick = (d) => d;\n\texport let snapTicks = false;\n\texport let ticks = undefined;\n\texport let xTick = undefined;\n\texport let yTick = 16;\n\texport let dxTick = 0;\n\texport let dyTick = 0;\n\texport let prefix = \"\";\n\texport let suffix = \"\";\n\n\t$: isBandwidth = typeof $xScale.bandwidth === \"function\";\n\n\t$: tickVals = Array.isArray(ticks)\n\t\t? ticks\n\t\t: isBandwidth\n\t\t  ? $xScale.domain()\n\t\t  : typeof ticks === \"function\"\n\t\t    ? ticks($xScale.ticks())\n\t\t    : $xScale.ticks(ticks);\n\n\tfunction textAnchor(i) {\n\t\tif (snapTicks === true) {\n\t\t\tif (i === 0) {\n\t\t\t\treturn \"start\";\n\t\t\t}\n\t\t\tif (i === tickVals.length - 1) {\n\t\t\t\treturn \"end\";\n\t\t\t}\n\t\t}\n\t\treturn \"middle\";\n\t}\n</script>\n\n<g class=\"axis x-axis\" class:snapTicks>\n\t{#each tickVals as tick, i}\n\t\t<g\n\t\t\tclass=\"tick tick-{tick}\"\n\t\t\ttransform=\"translate({$xScale(tick)},{$yRange[0]})\"\n\t\t>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line\n\t\t\t\t\tclass=\"gridline\"\n\t\t\t\t\tclass:dashed={tickDashed}\n\t\t\t\t\ty1={$height * -1}\n\t\t\t\t\ty2=\"0\"\n\t\t\t\t\tx1=\"0\"\n\t\t\t\t\tx2=\"0\"\n\t\t\t\t\tstyle=\"stroke: {tickColor}\"\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t{#if tickMarks === true}\n\t\t\t\t<line\n\t\t\t\t\tclass=\"tick-mark\"\n\t\t\t\t\ty1={0}\n\t\t\t\t\ty2={6}\n\t\t\t\t\tx1={xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}\n\t\t\t\t\tx2={xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}\n\t\t\t\t\tstyle=\"stroke: {tickColor}\"\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx={xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0}\n\t\t\t\ty={yTick}\n\t\t\t\tdx={dxTick}\n\t\t\t\tdy={dyTick}\n\t\t\t\ttext-anchor={textAnchor(i)}\n\t\t\t\tstyle=\"fill: {textColor}; font-family:Georgia\"\n\t\t\t>\n\t\t\t\t{i == tickVals.length - 1\n\t\t\t\t\t? prefix + formatTick(tick) + suffix\n\t\t\t\t\t: formatTick(tick)}\n\t\t\t</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: 0.8em;\n\t}\n\n\t.tick .tick-mark,\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.dashed {\n\t\tstroke-dasharray: 2;\n\t}\n\t/* This looks slightly better */\n\t.axis.snapTicks .tick:last-child text {\n\t\ttransform: translateX(3px);\n\t}\n\t.axis.snapTicks .tick.tick-0 text {\n\t\ttransform: translateX(-3px);\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from \"svelte\";\n\n\tconst { padding, xRange, yScale } = getContext(\"LayerCake\");\n\n\texport let ticks = 4;\n\texport let tickMarks = false;\n\texport let gridlines = true;\n\texport let tickDashed = false;\n\texport let tickColor = \"#bbb\";\n\texport let textColor = \"#666\";\n\texport let formatTick = (d) => d;\n\texport let xTick = 0;\n\texport let yTick = 0;\n\texport let dxTick = 0;\n\texport let dyTick = -4;\n\texport let textAnchor = \"start\";\n\texport let prefix = \"\";\n\texport let suffix = \"\";\n\n\t$: isBandwidth = typeof $yScale.bandwidth === \"function\";\n\n\t$: tickVals = Array.isArray(ticks)\n\t\t? ticks\n\t\t: isBandwidth\n\t\t  ? $yScale.domain()\n\t\t  : typeof ticks === \"function\"\n\t\t    ? ticks($yScale.ticks())\n\t\t    : $yScale.ticks(ticks);\n</script>\n\n<g class=\"axis y-axis\" transform=\"translate({-$padding.left}, 0)\">\n\t{#each tickVals as tick, i}\n\t\t<g\n\t\t\tclass=\"tick tick-{tick}\"\n\t\t\ttransform=\"translate({$xRange[0] +\n\t\t\t\t(isBandwidth ? $padding.left : 0)}, {$yScale(tick)})\"\n\t\t>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line\n\t\t\t\t\tclass=\"gridline\"\n\t\t\t\t\tx2=\"100%\"\n\t\t\t\t\ty1={yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}\n\t\t\t\t\tclass:dashed={tickDashed}\n\t\t\t\t\tstyle=\"stroke: {tickColor}\"\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t{#if tickMarks === true}\n\t\t\t\t<line\n\t\t\t\t\tclass=\"tick-mark\"\n\t\t\t\t\tx1=\"0\"\n\t\t\t\t\tx2={isBandwidth ? -6 : 6}\n\t\t\t\t\ty1={yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}\n\t\t\t\t\tstyle=\"stroke: {tickColor}\"\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx={xTick}\n\t\t\t\ty={yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}\n\t\t\t\tdx={isBandwidth ? -4 : dxTick}\n\t\t\t\tdy={isBandwidth ? 4 : dyTick}\n\t\t\t\tstyle=\"text-anchor:{isBandwidth\n\t\t\t\t\t? 'end'\n\t\t\t\t\t: textAnchor}; fill: {textColor}; font-family:Georgia\"\n\t\t\t>\n\t\t\t\t{i == tickVals.length - 1\n\t\t\t\t\t? prefix + formatTick(tick) + suffix\n\t\t\t\t\t: formatTick(tick)}\n\t\t\t</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: 0.8em;\n\t}\n\n\t.dashed {\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n</style>\n",
    "<div class=\"footer\"><slot /></div>\n\n<style>\n\t.footer {\n\t\tfont-size: 0.8em;\n\t\tcolor: grey;\n\t\tmargin-top: 5px;\n\t\tfont-family: Georgia;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from \"svelte\";\n\n\tconst { data, xScale, yScale, custom } = getContext(\"LayerCake\");\n\n\texport let hovered = null;\n\texport let selected = null;\n\texport let prefixLabel = \"\";\n\texport let vertLabShift = 0;\n\texport let yKey = null;\n\n\tlet coords = $custom.coords;\n\tlet coords2 = $coords[0];\n\tlet idKey = $custom.idKey;\n\tlet labelKey = $custom.labelKey;\n\t// let colorHover = $custom.colorHover ? $custom.colorHover : 'orange';\n\t// let colorSelect = $custom.colorSelect ? $custom.colorSelect : '#206095';\n</script>\n\n{#if $coords}\n\t<defs>\n\t\t<filter x=\"0\" y=\"0\" width=\"1\" height=\"1\" id=\"bgfill\">\n\t\t\t<feFlood flood-color=\"rgba(255,255,255,0.8)\" result=\"bg\" />\n\t\t\t<feMerge>\n\t\t\t\t<feMergeNode in=\"bg\" />\n\t\t\t\t<feMergeNode in=\"SourceGraphic\" />\n\t\t\t</feMerge>\n\t\t</filter>\n\t</defs>\n\t<g class=\"label-group\">\n\t\t{#if $coords[0] && $coords[0].x}\n\t\t\t{#each $coords as d, i}\n\t\t\t\t{#if [hovered, selected].includes($data[i][idKey])}\n\t\t\t\t\t<text\n\t\t\t\t\t\tclass=\"label\"\n\t\t\t\t\t\ttransform=\"translate(5,-5)\"\n\t\t\t\t\t\tfilter=\"url(#bgfill)\"\n\t\t\t\t\t\tfill=\"#333\"\n\t\t\t\t\t\tx={$xScale(d.x)}\n\t\t\t\t\t\ty={$yScale(d.y)}\n\t\t\t\t\t\tstyle=\"font-family:Georgia\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{$data[i][labelKey]}\n\t\t\t\t\t</text>\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t{:else if $coords[0] && $coords[0][0]}\n\t\t\t{#if !$coords[1]}\n\t\t\t\t{#each $coords[0] as d, i}\n\t\t\t\t\t{#if [hovered, selected].includes($data[0][i][idKey])}\n\t\t\t\t\t\t<text\n\t\t\t\t\t\t\tclass=\"label\"\n\t\t\t\t\t\t\ttransform=\"translate(10,{vertLabShift})\"\n\t\t\t\t\t\t\tfilter=\"url(#bgfill)\"\n\t\t\t\t\t\t\tfill=\"#333\"\n\t\t\t\t\t\t\tx={$xScale($coords[0][i].w)}\n\t\t\t\t\t\t\ty={$yScale($data[0][i][yKey])}\n\t\t\t\t\t\t\tstyle=\"font-family:Georgia\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{prefixLabel}{$data[0][i][labelKey]}\n\t\t\t\t\t\t</text>\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t{:else}\n\t\t\t\t{#each $coords as d, i}\n\t\t\t\t\t{#if [hovered, selected].includes($data[i][0][idKey])}\n\t\t\t\t\t\t<text\n\t\t\t\t\t\t\tclass=\"label\"\n\t\t\t\t\t\t\ttransform=\"translate(2,3)\"\n\t\t\t\t\t\t\tfilter=\"url(#bgfill)\"\n\t\t\t\t\t\t\tfill=\"#333\"\n\t\t\t\t\t\t\tx={$xScale(d[d.length - 1].x)}\n\t\t\t\t\t\t\ty={$yScale(d[d.length - 1].y)}\n\t\t\t\t\t\t\tstyle=\"font-family:Georgia\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{$data[i][0][labelKey]}\n\t\t\t\t\t\t</text>\n\t\t\t\t\t{/if}\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t{/if}\n\t</g>\n{/if}\n\n<style>\n\t.label {\n\t\tfont-size: 0.8em;\n\t}\n</style>\n",
    "<script>\n  export let domain = null;\n  export let colors = null;\n  export let line = false; // true if line chart\n  export let comparison = false; // true if chart uses bars + markers for comparison\n  export let horizontal = true; // true if marker lines should be horizontal, false if vertical\n  export let markerWidth = 2.5;\n  export let markerLength = 13;\n  export let round = false; // to represent round markers\n</script>\n\n{#if Array.isArray(domain) && Array.isArray(colors)}\n  <ul class=\"legend\">\n    {#each domain as label, i}\n      <li>\n        <div\n          class=\"bullet\"\n          class:round\n          style=\"background-color: {colors[i]}; width: {!horizontal && (line || (comparison && i != 0)) ? markerWidth : markerLength}px; height: {horizontal && (line || (comparison && i != 0)) ? markerWidth : markerLength}px\"\n        />\n        {label}\n      </li>\n    {/each}\n  </ul>\n{/if}\n\n<style>\n  ul.legend {\n    margin: 0;\n    padding: 0;\n  }\n  ul.legend li {\n    display: inline;\n    font-size: .8em;\n  }\n  ul.legend li + li {\n    margin-left: 8px;\n  }\n  .bullet {\n\t\tdisplay: inline-block;\n    vertical-align: middle;\n\t}\n  .round {\n    border-radius: 50%;\n  }\n</style>",
    "<script>\n\timport { getContext, createEventDispatcher } from \"svelte\";\n\n\tconst { data, xScale, yScale, zGet, config, custom } =\n\t\tgetContext(\"LayerCake\");\n\tconst dispatch = createEventDispatcher();\n\n\texport let lineWidth = 2.5;\n\texport let hover = false;\n\texport let hovered = null;\n\texport let select = false;\n\texport let selected = null;\n\texport let highlighted = [];\n\n\tlet coords = $custom.coords;\n\tlet idKey = $custom.idKey;\n\tlet colorHover = $custom.colorHover ? $custom.colorHover : \"orange\";\n\tlet colorSelect = $custom.colorSelect ? $custom.colorSelect : \"#206095\";\n\tlet colorHighlight = $custom.colorHighlight\n\t\t? $custom.colorHighlight\n\t\t: \"#206095\";\n\n\t// Function to make SVG path\n\tconst makePath = (group) => {\n\t\tlet path =\n\t\t\t\"M\" +\n\t\t\tgroup\n\t\t\t\t.map((d) => {\n\t\t\t\t\treturn $xScale(d.x) + \",\" + $yScale(d.y);\n\t\t\t\t})\n\t\t\t\t.join(\"L\");\n\t\treturn path;\n\t};\n\n\tfunction doHover(e, d) {\n\t\tif (hover) {\n\t\t\thovered = d ? d[0][idKey] : null;\n\t\t\tdispatch(\"hover\", {\n\t\t\t\tid: hovered,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction doSelect(e, d) {\n\t\tif (select) {\n\t\t\tselected = d ? d[0][idKey] : null;\n\t\t\tdispatch(\"select\", {\n\t\t\t\tid: selected,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e,\n\t\t\t});\n\t\t}\n\t}\n</script>\n\n{#if $coords}\n\t<g class=\"line-group\">\n\t\t{#each $coords as group, i}\n\t\t\t<path\n\t\t\t\tclass=\"path-hover\"\n\t\t\t\td={makePath(group)}\n\t\t\t\ton:mouseover={(e) => doHover(e, $data[i])}\n\t\t\t\ton:mouseleave={(e) => doHover(e, null)}\n\t\t\t\ton:focus={(e) => doHover(e, $data[i])}\n\t\t\t\ton:blur={(e) => doHover(e, null)}\n\t\t\t\ton:click={(e) => doSelect(e, $data[i])}\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclass=\"path-line\"\n\t\t\t\td={makePath(group)}\n\t\t\t\tstroke={$config.z ? $zGet($data[i][0]) : $config.zRange[0]}\n\t\t\t\tstroke-width={lineWidth}\n\t\t\t/>\n\t\t{/each}\n\n\t\t{#if idKey && (hover || selected || highlighted[0])}\n\t\t\t{#each $coords as group, i}\n\t\t\t\t{#if [hovered, selected, ...highlighted].includes($data[i][0][idKey])}\n\t\t\t\t\t<path\n\t\t\t\t\t\tclass=\"path-overlay\"\n\t\t\t\t\t\td={makePath(group)}\n\t\t\t\t\t\tstroke={$data[i][0][idKey] == hovered\n\t\t\t\t\t\t\t? colorHover\n\t\t\t\t\t\t\t: $data[i][0][idKey] == selected\n\t\t\t\t\t\t\t  ? colorSelect\n\t\t\t\t\t\t\t  : colorHighlight}\n\t\t\t\t\t\tstroke-width={lineWidth + 1.5}\n\t\t\t\t\t/>\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t{/if}\n\t</g>\n{/if}\n\n<style>\n\tpath {\n\t\tfill: none;\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t}\n\t.path-hover {\n\t\tstroke: rgba(255, 255, 255, 0);\n\t\tstroke-width: 7;\n\t}\n\t.path-line,\n\t.path-overlay {\n\t\tpointer-events: none;\n\t}\n</style>\n",
    "<div class=\"title\"><slot /></div>\n\n<style>\n\t.title {\n\t\tfont-size: 1.1em;\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 10px;\n\t\tfont-family: Georgia;\n\t}\n</style>\n",
    "<script>\n\timport { Delaunay } from \"d3-delaunay\";\n\timport { getContext, createEventDispatcher } from \"svelte\";\n\n\tconst { data, width, height, custom, xScale, yScale } =\n\t\tgetContext(\"LayerCake\");\n\tconst dispatch = createEventDispatcher();\n\n\texport let hover = false;\n\texport let hovered = null;\n\texport let select = false;\n\texport let selected = null;\n\n\tlet coords = $custom.coords;\n\tlet idKey = $custom.idKey;\n\n\tfunction doHover(e, d) {\n\t\tif (hover) {\n\t\t\thovered = d ? d[idKey] : null;\n\t\t\tdispatch(\"hover\", {\n\t\t\t\tid: hovered,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction doSelect(e, d) {\n\t\tif (select) {\n\t\t\tselected = d ? d[idKey] : null;\n\t\t\tdispatch(\"select\", {\n\t\t\t\tid: selected,\n\t\t\t\tdata: d,\n\t\t\t\tevent: e,\n\t\t\t});\n\t\t}\n\t}\n\n\t$: coordsArray = Array.isArray($coords)\n\t\t? $coords.map((d) => [$xScale(d.x), $yScale(d.y)])\n\t\t: [];\n\t$: voronoi = Delaunay.from(coordsArray).voronoi([0, 0, $width, $height]);\n</script>\n\n{#if voronoi}\n\t<g class=\"voronoi-group\">\n\t\t{#each $data as d, i}\n\t\t\t<path\n\t\t\t\tclass=\"voronoi-cell\"\n\t\t\t\td={voronoi.renderCell(i)}\n\t\t\t\ton:mouseover={(e) => doHover(e, $data[i])}\n\t\t\t\ton:mouseleave={(e) => doHover(e, null)}\n\t\t\t\ton:focus={(e) => doHover(e, $data[i])}\n\t\t\t\ton:blur={(e) => doHover(e, null)}\n\t\t\t\ton:click={(e) => doSelect(e, $data[i])}\n\t\t\t/>\n\t\t{/each}\n\t</g>\n{/if}\n\n<style>\n\t.voronoi-cell {\n\t\tfill: none;\n\t\tstroke: none;\n\t\tpointer-events: all;\n\t}\n</style>\n",
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width < 0 && b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative width and height. Did you forget to set a width or height on the container?');\n\t\t} else if (b.width < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has a negative width. Did you forget to set that CSS on the container?');\n\t\t} else if (b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative height. Did you forget to set that CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<script>\n\t// CORE IMPORTS\n\timport { setContext, onMount } from \"svelte\";\n\timport { getMotion } from \"./utils.js\";\n\timport { themes } from \"./config.js\";\n\timport DataTeamHeader from \"./layout/DataTeamHeader.svelte\";\n\timport DataTeamFooter from \"./layout/DataTeamFooter.svelte\";\n\timport Header from \"./layout/Header.svelte\";\n\timport Section from \"./layout/Section.svelte\";\n\timport Media from \"./layout/Media.svelte\";\n\timport Scroller from \"./layout/Scroller.svelte\";\n\timport Filler from \"./layout/Filler.svelte\";\n\timport Divider from \"./layout/Divider.svelte\";\n\timport Table from \"./layout/Table.svelte\";\n\timport Arrow from \"./ui/Arrow.svelte\";\n\timport { writable } from \"svelte/store\";\n\n\t// DEMO-SPECIFIC IMPORTS\n\timport {\n\t\tgetData,\n\t\tsetColors,\n\t\tgetTopo,\n\t\tgetBreaks,\n\t\tgetColor,\n\t} from \"./utils.js\";\n\timport { colors, units } from \"./config.js\";\n\timport {\n\t\tScatterChart,\n\t\tLineChart,\n\t\tBarChart,\n\t} from \"@onsvisual/svelte-charts\";\n\n\t// CORE CONFIG (COLOUR THEMES)\n\t// Set theme globally (options are 'light', 'dark' or 'lightblue')\n\tlet theme = \"light\";\n\tsetContext(\"theme\", theme);\n\tsetColors(themes, theme);\n\n\t// CONFIG FOR SCROLLER COMPONENTS\n\t// Config\n\tconst threshold = 0.65;\n\t// State\n\tlet animation = getMotion(); // Set animation preference depending on browser preference\n\tlet id = {}; // Object to hold visible section IDs of Scroller components\n\tlet idPrev = {}; // Object to keep track of previous IDs, to compare for changes\n\tonMount(() => {\n\t\tidPrev = { ...id };\n\t});\n\n\t// Data for Figures (in future can figure out how to load in data from e.g. csv's)\n\t// gender pay gap\n\tconst genderGapData = [\n\t\t{ Group: \"Females (w/in title)\", Earnings: 0.994 },\n\t\t{ Group: \"Females\", Earnings: 0.835 },\n\t\t{ Group: \"Males\", Earnings: 1 },\n\t];\n\t// racial pay gap\n\tconst raceGapData = [\n\t\t{ Group: \"ABHLO (w/in title)\", Earnings: 0.992 },\n\t\t{ Group: \"ABHLO\", Earnings: 0.842 },\n\t\t{ Group: \"White\", Earnings: 1 },\n\t];\n\t// combined pay gap\n\tconst combinedGapData = [\n\t\t{ Group: \"All Others (w/in title)\", Earnings: 0.987 },\n\t\t{ Group: \"All Others\", Earnings: 0.815 },\n\t\t{ Group: \"White Males\", Earnings: 1 },\n\t];\n\t// gender gap decomposition\n\tconst genderDecompData = [\n\t\t{\n\t\t\tGroup: \"ABHLO Females\",\n\t\t\tid: \"ABHLO Females1\",\n\t\t\tComponent: 0.141,\n\t\t\tLabel: \"85%\",\n\t\t},\n\t\t{\n\t\t\tGroup: \"White Females\",\n\t\t\tid: \"White Females1\",\n\t\t\tComponent: 0.025,\n\t\t\tLabel: \"15%\",\n\t\t},\n\t\t{\n\t\t\tGroup: \"Total Gap\",\n\t\t\tid: \"Total Gap1\",\n\t\t\tComponent: 0.165,\n\t\t\tLabel: \"$0.165\",\n\t\t},\n\t];\n\t// racial gap decomposition\n\tconst raceDecompData = [\n\t\t{\n\t\t\tGroup: \"ABHLO Females\",\n\t\t\tid: \"ABHLO Females2\",\n\t\t\tComponent: 0.107,\n\t\t\tLabel: \"67.6%\",\n\t\t},\n\t\t{\n\t\t\tGroup: \"ABHLO Males\",\n\t\t\tid: \"ABHLO Males2\",\n\t\t\tComponent: 0.051,\n\t\t\tLabel: \"32.4%\",\n\t\t},\n\t\t{\n\t\t\tGroup: \"Total Gap\",\n\t\t\tid: \"Total Gap2\",\n\t\t\tComponent: 0.158,\n\t\t\tLabel: \"$0.158\",\n\t\t},\n\t];\n\t// combined gap decomposition\n\tconst combinedDecompData = [\n\t\t{\n\t\t\tGroup: \"ABHLO Females\",\n\t\t\tid: \"ABHLO Females3\",\n\t\t\tComponent: 0.103,\n\t\t\tLabel: \"55.4%\",\n\t\t},\n\t\t{\n\t\t\tGroup: \"ABHLO Males\",\n\t\t\tid: \"ABHLO Males3\",\n\t\t\tComponent: 0.058,\n\t\t\tLabel: \"31.5%\",\n\t\t},\n\t\t{\n\t\t\tGroup: \"White Females\",\n\t\t\tid: \"White Females3\",\n\t\t\tComponent: 0.024,\n\t\t\tLabel: \"13.1%\",\n\t\t},\n\t\t{\n\t\t\tGroup: \"Total Gap\",\n\t\t\tid: \"Total Gap3\",\n\t\t\tComponent: 0.185,\n\t\t\tLabel: \"$0.185\",\n\t\t},\n\t];\n\n\t//Data for Tables\n\t/*let lowNonWhiteFemaleData = writable([\n\t\t{\n\t\t\t\"Job Title\": \"Caseworker\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"81%\",\n\t\t\t\"% Female\": \"75%\",\n\t\t\t\"Median Salary\": \"$48k\",\n\t\t\t\"Count\": \"1,222\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Clerical Associate\",\n\t\t\tAgency: \"DFTA\",\n\t\t\t\"% Non-White\": \"82%\",\n\t\t\t\"% Female\": \"82%\",\n\t\t\t\"Median Salary\": \"$43k\",\n\t\t\t\"Count\": \"3,222\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Community Assistant\",\n\t\t\tAgency: \"OATH\",\n\t\t\t\"% Non-White\": \"82%\",\n\t\t\t\"% Female\": \"59%\",\n\t\t\t\"Median Salary\": \"$37k\",\n\t\t\t\"Count\": \"765\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Community Associate\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"80%\",\n\t\t\t\"% Female\": \"74%\",\n\t\t\t\"Median Salary\": \"$46k\",\n\t\t\t\"Count\": \"3,425\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Eligibility Specialist\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"83%\",\n\t\t\t\"% Female\": \"82%\",\n\t\t\t\"Median Salary\": \"$43k\",\n\t\t\t\"Count\": \"2,068\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Job Opportunity Specialist\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"77%\",\n\t\t\t\"% Female\": \"70%\",\n\t\t\t\"Median Salary\": \"$49k\",\n\t\t\t\"Count\": \"1,184\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Police Administrative Aide\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Non-White\": \"73%\",\n\t\t\t\"% Female\": \"92%\",\n\t\t\t\"Median Salary\": \"$42k\",\n\t\t\t\"Count\": \"1,159\",\n\t\t},\n\n\t\t{\n\t\t\t\"Job Title\": \"Police Communications Tech.\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Non-White\": \"75%\",\n\t\t\t\"% Female\": \"85%\",\n\t\t\t\"Median Salary\": \"$53k\",\n\t\t\t\"Count\": \"1,530\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Probation Officer\",\n\t\t\tAgency: \"DOP\",\n\t\t\t\"% Non-White\": \"85%\",\n\t\t\t\"% Female\": \"72%\",\n\t\t\t\"Median Salary\": \"$54k\",\n\t\t\t\"Count\": \"570\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"School Safety Agent\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Non-White\": \"82%\",\n\t\t\t\"% Female\": \"72%\",\n\t\t\t\"Median Salary\": \"$50k\",\n\t\t\t\"Count\": \"4,444\",\n\t\t},\n\t]);*/\n\t// 17 low-paying non-white dominated jobs\n\t/*let lowNonWhiteData = writable([\n\t\t{\n\t\t\t\"Job Title\": \"Assoc. Job Opportunity Specialist\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"87%\",\n\t\t\t\"% Female\": \"78%\",\n\t\t\t\"Median Salary\": \"$60k\",\n\t\t\t\"Count\": \"687\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Caseworker\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"81%\",\n\t\t\t\"% Female\": \"75%\",\n\t\t\t\"Median Salary\": \"$48k\",\n\t\t\t\"Count\": \"1,222\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Clerical Associate\",\n\t\t\tAgency: \"DFTA\",\n\t\t\t\"% Non-White\": \"82%\",\n\t\t\t\"% Female\": \"82%\",\n\t\t\t\"Median Salary\": \"$43k\",\n\t\t\t\"Count\": \"3,222\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Community Assistant\",\n\t\t\tAgency: \"OATH\",\n\t\t\t\"% Non-White\": \"82%\",\n\t\t\t\"% Female\": \"59%\",\n\t\t\t\"Median Salary\": \"$37k\",\n\t\t\t\"Count\": \"765\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Community Associate\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"80%\",\n\t\t\t\"% Female\": \"74%\",\n\t\t\t\"Median Salary\": \"$46k\",\n\t\t\t\"Count\": \"3,425\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"EMS-EMT\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% Non-White\": \"51%\",\n\t\t\t\"% Female\": \"25%\",\n\t\t\t\"Median Salary\": \"$49k\",\n\t\t\t\"Count\": \"3,039\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Eligibility Specialist\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"83%\",\n\t\t\t\"% Female\": \"82%\",\n\t\t\t\"Median Salary\": \"$43k\",\n\t\t\t\"Count\": \"2,068\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Fraud Investigator\",\n\t\t\tAgency: \"DOF\",\n\t\t\t\"% Non-White\": \"85%\",\n\t\t\t\"% Female\": \"60%\",\n\t\t\t\"Median Salary\": \"$59k\",\n\t\t\t\"Count\": \"549\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Job Opportunity Specialist\",\n\t\t\tAgency: \"HRA/DSS\",\n\t\t\t\"% Non-White\": \"77%\",\n\t\t\t\"% Female\": \"70%\",\n\t\t\t\"Median Salary\": \"$49k\",\n\t\t\t\"Count\": \"1,184\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Police Administrative Aide\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Non-White\": \"73%\",\n\t\t\t\"% Female\": \"92%\",\n\t\t\t\"Median Salary\": \"$42k\",\n\t\t\t\"Count\": \"1,159\",\n\t\t},\n\n\t\t{\n\t\t\t\"Job Title\": \"Police Communications Tech.\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Non-White\": \"75%\",\n\t\t\t\"% Female\": \"85%\",\n\t\t\t\"Median Salary\": \"$53k\",\n\t\t\t\"Count\": \"1,530\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Probation Officer\",\n\t\t\tAgency: \"DOP\",\n\t\t\t\"% Non-White\": \"85%\",\n\t\t\t\"% Female\": \"72%\",\n\t\t\t\"Median Salary\": \"$54k\",\n\t\t\t\"Count\": \"570\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"School Safety Agent\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Non-White\": \"82%\",\n\t\t\t\"% Female\": \"72%\",\n\t\t\t\"Median Salary\": \"$50k\",\n\t\t\t\"Count\": \"4,444\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Senior Police Admin. Aide\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Non-White\": \"77%\",\n\t\t\t\"% Female\": \"95%\",\n\t\t\t\"Median Salary\": \"$54k\",\n\t\t\t\"Count\": \"685\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Special Officer\",\n\t\t\tAgency: \"DCAS\",\n\t\t\t\"% Non-White\": \"80%\",\n\t\t\t\"% Female\": \"49%\",\n\t\t\t\"Median Salary\": \"$41k\",\n\t\t\t\"Count\": \"753\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Traffic Enforcement Agent\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Non-White\": \"81%\",\n\t\t\t\"% Female\": \"39%\",\n\t\t\t\"Median Salary\": \"$43k\",\n\t\t\t\"Count\": \"2,763\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Youth Development Specialist\",\n\t\t\tAgency: \"ACS\",\n\t\t\t\"% Non-White\": \"87%\",\n\t\t\t\"% Female\": \"32%\",\n\t\t\t\"Median Salary\": \"$49k\",\n\t\t\t\"Count\": \"609\",\n\t\t},\n\t]);*/\n\t// mid-paying male dominated jobs\n\tlet midMaleData = writable([\n\t\t{\n\t\t\t\"Job Title\": \"Auto Mechanic\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Female\": \"0.3%\",\n\t\t\t\"Median Salary\": \"$91k\",\n\t\t\tCount: \"791\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Computer Specialist\",\n\t\t\tAgency: \"DOHMH\",\n\t\t\t\"% Female\": \"33.4%\",\n\t\t\t\"Median Salary\": \"$106k\",\n\t\t\tCount: \"1,095\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Correction Officer\",\n\t\t\tAgency: \"DOC\",\n\t\t\t\"% Female\": \"43.1%\",\n\t\t\t\"Median Salary\": \"$92k\",\n\t\t\tCount: \"6,885\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"EMS-Paramedic\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% Female\": \"30.7%\",\n\t\t\t\"Median Salary\": \"$73k\",\n\t\t\tCount: \"916\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Firefighter\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% Female\": \"1.5%\",\n\t\t\t\"Median Salary\": \"$92k\",\n\t\t\tCount: \"8,101\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Highway Repairer\",\n\t\t\tAgency: \"DOT\",\n\t\t\t\"% Female\": \"6.4%\",\n\t\t\t\"Median Salary\": \"$99k\",\n\t\t\tCount: \"452\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Police Officer\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Female\": \"21.5%\",\n\t\t\t\"Median Salary\": \"$85k\",\n\t\t\tCount: \"23,536\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Sanitation Worker\",\n\t\t\tAgency: \"DSNY\",\n\t\t\t\"% Female\": \"3.1%\",\n\t\t\t\"Median Salary\": \"$83k\",\n\t\t\tCount: \"6,602\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Sewage Treatment Worker\",\n\t\t\tAgency: \"DEP\",\n\t\t\t\"% Female\": \"0.2%\",\n\t\t\t\"Median Salary\": \"$94k\",\n\t\t\tCount: \"555\",\n\t\t},\n\t]);\n\t// high-paying male dominated jobs\n\tlet highMaleData = writable([\n\t\t{\n\t\t\t\"Job Title\": \"Fire Captain\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% Female\": \"0.2%\",\n\t\t\t\"Median Salary\": \"$136k\",\n\t\t\tCount: \"557\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Fire Lieutenant\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% Female\": \"0.6%\",\n\t\t\t\"Median Salary\": \"$118k\",\n\t\t\tCount: \"1,452\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Police Lieutenant\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Female\": \"12.4%\",\n\t\t\t\"Median Salary\": \"$136k\",\n\t\t\tCount: \"1,352\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"P.O. DA Det. GR3\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Female\": \"15%\",\n\t\t\t\"Median Salary\": \"$105k\",\n\t\t\tCount: \"3,351\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"P.O. Det Spec.\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Female\": \"19.6%\",\n\t\t\t\"Median Salary\": \"$105k\",\n\t\t\tCount: \"949\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"P.O. D/A Det. 2nd GR\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Female\": \"17.1%\",\n\t\t\t\"Median Salary\": \"$118k\",\n\t\t\tCount: \"690\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Police Sergeant\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% Female\": \"16.6%\",\n\t\t\t\"Median Salary\": \"$118k\",\n\t\t\tCount: \"3,720\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Supervising EMS\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% Female\": \"26.1%\",\n\t\t\t\"Median Salary\": \"$80k\",\n\t\t\tCount: \"491\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Sanitation Supervisor\",\n\t\t\tAgency: \"DSNY\",\n\t\t\t\"% Female\": \"5.8%\",\n\t\t\t\"Median Salary\": \"$112k\",\n\t\t\tCount: \"1,097\",\n\t\t},\n\t]);\n\t// mid-paying white dominated jobs\n\tlet midWhiteData = writable([\n\t\t{\n\t\t\t\"Job Title\": \"Agency Attorney\",\n\t\t\tAgency: \"DCAS\",\n\t\t\t\"% ABHLO\": \"38%\",\n\t\t\t\"Median Salary\": \"$92k\",\n\t\t\tCount: \"779\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Auto Mechanic\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% ABHLO\": \"46.8%\",\n\t\t\t\"Median Salary\": \"$91k\",\n\t\t\tCount: \"791\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Criminalist\",\n\t\t\tAgency: \"DOHMH\",\n\t\t\t\"% ABHLO\": \"45.7%\",\n\t\t\t\"Median Salary\": \"$82k\",\n\t\t\tCount: \"451\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"EMS-Paramedic\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% ABHLO\": \"52.5%\",\n\t\t\t\"Median Salary\": \"$73k\",\n\t\t\tCount: \"916\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Firefighter\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% ABHLO\": \"25.4%\",\n\t\t\t\"Median Salary\": \"$92k\",\n\t\t\tCount: \"8,101\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Occupational Therapist\",\n\t\t\tAgency: \"DOE\",\n\t\t\t\"% ABHLO\": \"39.6%\",\n\t\t\t\"Median Salary\": \"$81k\",\n\t\t\tCount: \"2,091\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Police Officer\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% ABHLO\": \"52.6%\",\n\t\t\t\"Median Salary\": \"$85k\",\n\t\t\tCount: \"23,536\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Sanitation Worker\",\n\t\t\tAgency: \"DSNY\",\n\t\t\t\"% ABHLO\": \"45.3%\",\n\t\t\t\"Median Salary\": \"$83k\",\n\t\t\tCount: \"6,602\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Sewage Treatment Worker\",\n\t\t\tAgency: \"DEP\",\n\t\t\t\"% ABHLO\": \"35.9%\",\n\t\t\t\"Median Salary\": \"$94k\",\n\t\t\tCount: \"555\",\n\t\t},\n\t]);\n\t// high-paying white dominated jobs\n\tlet highWhiteData = writable([\n\t\t{\n\t\t\t\"Job Title\": \"Fire Captain\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% ABHLO\": \"7.2%\",\n\t\t\t\"Median Salary\": \"$136k\",\n\t\t\tCount: \"557\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Fire Lieutenant\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% ABHLO\": \"12.7%\",\n\t\t\t\"Median Salary\": \"$118k\",\n\t\t\tCount: \"1,452\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Police Lieutenant\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% ABHLO\": \"44%\",\n\t\t\t\"Median Salary\": \"$136k\",\n\t\t\tCount: \"1,352\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"P.O. DA Det. GR3\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% ABHLO\": \"42.9%\",\n\t\t\t\"Median Salary\": \"$105k\",\n\t\t\tCount: \"3,351\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"P.O. Det Spec.\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% ABHLO\": \"45.8%\",\n\t\t\t\"Median Salary\": \"$105k\",\n\t\t\tCount: \"949\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"P.O. D/A Det. 2nd GR\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% ABHLO\": \"47.1%\",\n\t\t\t\"Median Salary\": \"$118k\",\n\t\t\tCount: \"690\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Police Sergeant\",\n\t\t\tAgency: \"NYPD\",\n\t\t\t\"% ABHLO\": \"44.7%\",\n\t\t\t\"Median Salary\": \"$118k\",\n\t\t\tCount: \"3,720\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Supervising EMS\",\n\t\t\tAgency: \"FDNY\",\n\t\t\t\"% ABHLO\": \"46.8%\",\n\t\t\t\"Median Salary\": \"$80k\",\n\t\t\tCount: \"491\",\n\t\t},\n\t\t{\n\t\t\t\"Job Title\": \"Sanitation Supervisor\",\n\t\t\tAgency: \"DSNY\",\n\t\t\t\"% ABHLO\": \"38.8%\",\n\t\t\t\"Median Salary\": \"$112k\",\n\t\t\tCount: \"1,097\",\n\t\t},\n\t]);\n\t// agencies with highest share of ABHLO females\n\tlet highNonWhiteFemaleAgencyData = writable([\n\t\t{\n\t\t\tAgency: \"Administration of Children's Services\",\n\t\t\t\"% ABHLO Female\": \"58.2%\",\n\t\t\t\"Median Salary\": \"$60k\",\n\t\t},\n\t\t{\n\t\t\tAgency: \"Human Resources Administration/Department of Social Services\",\n\t\t\t\"% ABHLO Female\": \"57.3%\",\n\t\t\t\"Median Salary\": \"$54k\",\n\t\t},\n\t\t{\n\t\t\tAgency: \"Department of Probation\",\n\t\t\t\"% ABHLO Female\": \"57.1%\",\n\t\t\t\"Median Salary\": \"$58k\",\n\t\t},\n\t\t{\n\t\t\tAgency: \"Department of Health and Mental Hygiene\",\n\t\t\t\"% ABHLO Female\": \"51.5%\",\n\t\t\t\"Median Salary\": \"$66k\",\n\t\t},\n\t\t{\n\t\t\tAgency: \"Law Department\",\n\t\t\t\"% ABHLO Female\": \"49.5%\",\n\t\t\t\"Median Salary\": \"$50k\",\n\t\t},\n\t]);\n\t// agencies with lowest share of ABHLO females\n\tlet lowNonWhiteFemaleAgencyData = writable([\n\t\t{\n\t\t\tAgency: \"Department of Environmental Protection\",\n\t\t\t\"% ABHLO Female\": \"15.6%\",\n\t\t\t\"Median Salary\": \"$86k\",\n\t\t},\n\t\t{\n\t\t\tAgency: \"Department of Transportation\",\n\t\t\t\"% ABHLO Female\": \"19.2%\",\n\t\t\t\"Median Salary\": \"$78k\",\n\t\t},\n\t\t{\n\t\t\tAgency: \"Technology and Innovation\",\n\t\t\t\"% ABHLO Female\": \"22.1%\",\n\t\t\t\"Median Salary\": \"$95k\",\n\t\t},\n\t\t{\n\t\t\tAgency: \"Department of Sanitation\",\n\t\t\t\"% ABHLO Female\": \"5.6%\",\n\t\t\t\"Median Salary\": \"$83k\",\n\t\t},\n\t\t{\n\t\t\tAgency: \"Fire Department\",\n\t\t\t\"% ABHLO Female\": \"6.7%\",\n\t\t\t\"Median Salary\": \"$92k\",\n\t\t},\n\t]);\n\tconst salaryByFracNonWhiteFemaleData = [\n\t\t{ Share: 5, MedSalary: 92073, NumWorkers: 38604, Format: \"$92k\" },\n\t\t{ Share: 15, MedSalary: 85292, NumWorkers: 39897, Format: \"$85k\" },\n\t\t{ Share: 25, MedSalary: 92073, NumWorkers: 13079, Format: \"$92k\" },\n\t\t{ Share: 35, MedSalary: 78910, NumWorkers: 11025, Format: \"$79k\" },\n\t\t{ Share: 45, MedSalary: 65017, NumWorkers: 8078, Format: \"$65k\" },\n\t\t{ Share: 55, MedSalary: 61893, NumWorkers: 12194, Format: \"$62k\" },\n\t\t{ Share: 65, MedSalary: 51426.5, NumWorkers: 25832, Format: \"$51k\" },\n\t\t{ Share: 75, MedSalary: 58802, NumWorkers: 2607, Format: \"$59k\" },\n\t\t{ Share: 85, MedSalary: 56832, NumWorkers: 176, Format: \"$57k\" },\n\t\t{ Share: 95, MedSalary: 90000, NumWorkers: 101, Format: \"$90k\" },\n\t];\n\n\t// State variables for scrolly\n\tlet genderGapFigIndex = 0;\n\tlet genderGapFigSelect = null;\n\t$: {\n\t\tif (genderGapFigIndex == 0) {\n\t\t\tgenderGapFigSelect = \"Males\";\n\t\t} else if (genderGapFigIndex == 1) {\n\t\t\tgenderGapFigSelect = \"Females\";\n\t\t} else {\n\t\t\tgenderGapFigSelect = \"Females (w/in title)\";\n\t\t}\n\t}\n\tlet raceGapFigIndex = 0;\n\tlet raceGapFigSelect = null;\n\t$: {\n\t\tif (raceGapFigIndex == 0) {\n\t\t\traceGapFigSelect = \"White\";\n\t\t} else if (raceGapFigIndex == 1) {\n\t\t\traceGapFigSelect = \"ABHLO\";\n\t\t} else {\n\t\t\traceGapFigSelect = \"ABHLO (w/in title)\";\n\t\t}\n\t}\n\tlet combinedGapFigIndex = 0;\n\tlet combinedGapFigSelect = null;\n\t$: {\n\t\tif (combinedGapFigIndex == 0) {\n\t\t\tcombinedGapFigSelect = \"White Males\";\n\t\t} else if (combinedGapFigIndex == 1) {\n\t\t\tcombinedGapFigSelect = \"All Others\";\n\t\t} else {\n\t\t\tcombinedGapFigSelect = \"All Others (w/in title)\";\n\t\t}\n\t}\n\tlet genderDecompFigIndex = 0;\n\tlet genderDecompFigSelect = null;\n\t$: {\n\t\tif (genderDecompFigIndex == 0) {\n\t\t\tgenderDecompFigSelect = \"Total Gap1\";\n\t\t} else if (genderDecompFigIndex == 1) {\n\t\t\tgenderDecompFigSelect = \"White Females1\";\n\t\t} else {\n\t\t\tgenderDecompFigSelect = \"ABHLO Females1\";\n\t\t}\n\t}\n\tlet raceDecompFigIndex = 0;\n\tlet raceDecompFigSelect = null;\n\t$: {\n\t\tif (raceDecompFigIndex == 0) {\n\t\t\traceDecompFigSelect = \"Total Gap2\";\n\t\t} else if (raceDecompFigIndex == 1) {\n\t\t\traceDecompFigSelect = \"ABHLO Males2\";\n\t\t} else {\n\t\t\traceDecompFigSelect = \"ABHLO Females2\";\n\t\t}\n\t}\n\tlet combinedDecompFigIndex = 0;\n\tlet combinedDecompFigSelect = null;\n\t$: {\n\t\tif (combinedDecompFigIndex == 0) {\n\t\t\tcombinedDecompFigSelect = \"Total Gap3\";\n\t\t} else if (combinedDecompFigIndex == 1) {\n\t\t\tcombinedDecompFigSelect = \"White Females3\";\n\t\t} else if (combinedDecompFigIndex == 2) {\n\t\t\tcombinedDecompFigSelect = \"ABHLO Males3\";\n\t\t} else {\n\t\t\tcombinedDecompFigSelect = \"ABHLO Females3\";\n\t\t}\n\t}\n\n\t// Functions for on:select and on:hover events\n\tfunction doSelect(e) {\n\t\tselected = e.detail.id;\n\t}\n\tfunction doHover(e) {\n\t\thovered = e.detail.id;\n\t}\n</script>\n\n<DataTeamHeader filled={true} center={false} />\n\n<Header\n\tbgcolor=\"#206095\"\n\tbgfixed={true}\n\ttheme=\"dark\"\n\tcenter={false}\n\tshort={true}\n>\n\t<h1 style=\"font-family:Georgia\">Pay Gaps in New York City</h1>\n\t<p class=\"text-big\" style=\"margin-top: 5px; font-family:Georgia\">\n\t\tClosing the Gender and Racial Pay Gaps in the Municipal Workforce\n\t</p>\n\t<p class=\"text-small\" style=\"margin-top: 50px; font-family:Georgia\">\n\t\tResearch by <a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"https://www.linkedin.com/in/julia-fredenburg/\"\n\t\t\ttarget=\"_blank\">Julia Fredenburg</a\n\t\t>,\n\t\t<a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"https://newyorkcitycouncil.github.io/web-dev-data-teams/#:~:text=Hirota\"\n\t\t\ttarget=\"_blank\">Reese Hirota</a\n\t\t>,\n\t\t<a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"https://newyorkcitycouncil.github.io/web-dev-data-teams/#:~:text=Koepcke\"\n\t\t\ttarget=\"_blank\">Eric J. Koepcke</a\n\t\t>,\n\t\t<a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"https://newyorkcitycouncil.github.io/web-dev-data-teams/#:~:text=Martinez\"\n\t\t\ttarget=\"_blank\">Rose Martinez</a\n\t\t>,\n\t\t<a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"https://newyorkcitycouncil.github.io/web-dev-data-teams/#:~:text=Melissa\"\n\t\t\ttarget=\"_blank\">Melissa Nu&ntilde;ez</a\n\t\t>,\n\t\t<a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"https://newyorkcitycouncil.github.io/web-dev-data-teams/#:~:text=Wu\"\n\t\t\ttarget=\"_blank\">James Wu</a\n\t\t>, and\n\t\t<a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"https://www.linkedin.com/in/christopher-zawora-56702168/\"\n\t\t\ttarget=\"_blank\">Christopher Zawora</a\n\t\t>\n\t</p>\n\t<p class=\"text-small\" style=\"margin-top: 10px; font-family:Georgia\">\n\t\tWebpage by <a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"https://newyorkcitycouncil.github.io/web-dev-data-teams/#:~:text=Koepcke\"\n\t\t\ttarget=\"_blank\">Eric J. Koepcke</a\n\t\t>\n\t</p>\n\t<p class=\"text-small\" style=\"margin-top: 50px; font-family:Georgia\">\n\t\tApril 2024\n\t</p>\n\t<!-- <p>\n\t\t<Toggle\n\t\t\tlabel=\"Animation {animation ? 'on' : 'off'}\"\n\t\t\tmono={true}\n\t\t\tbind:checked={animation}\n\t\t/>\n\t</p> -->\n\t<div style=\"margin-top: 50px; font-family:Georgia\">\n\t\t<Arrow color=\"white\" {animation}></Arrow>\n\t</div>\n</Header>\n\n<Filler theme=\"lightblue\" short={true} wide={true} center={true}>\n\t<p class=\"text-big\" style=\"font-family:Georgia\">\n\t\tLarge gender and racial pay gaps are present in the NYC municipal\n\t\tworkforce.\n\t</p>\n\t<p></p>\n\t<p class=\"text-big\" style=\"font-family:Georgia\">\n\t\tWhy is this the case? What steps can be taken to close these gaps?\n\t</p>\n</Filler>\n\n<Section>\n\t<p>\n\t\tIn 2019, the New York City Council passed Local Law 18, also known as\n\t\tthe “Pay Equity Law,” to identify pay disparities among employees of the\n\t\tCity of New York based on race/ethnicity and gender. The law provides\n\t\tthe Council's Data Team with access to municipal employee data to\n\t\tfacilitate investigation of any pay disparities.\n\t</p>\n\t<p>\n\t\tIn the Data Team's \"Pay Equity Law\" <a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"http://council.nyc.gov/data/wp-content/uploads/sites/73/2024/04/PayDisparitiesReport2024.pdf\"\n\t\t\ttarget=\"_blank\">report</a\n\t\t>, we analyzed data from 2021 and found large pay gaps between male and\n\t\tfemale employees and white and Asian, Black or African American,\n\t\tHispanic/Latino, or \"Other race/ethnicity\" (henceforth, \"ABHLO\")\n\t\temployees. These pay gaps are almost completely explained by\n\t\toccupational segregation. That is, within the same job title, there is\n\t\tessentially equal pay for all individuals regardless of gender and race.\n\t\tHowever, the uneven distribution of employees by race and gender across\n\t\toccupations and the pay differences between these occupations lead to\n\t\tlarge Citywide gender and race pay gaps. Expanding upon this, we show\n\t\thow segregation both across and within City agencies contributes to pay\n\t\tgaps and how the particularly low pay received by ABHLO female employees\n\t\texplains large portions of these pay gaps.\n\t</p>\n\t<p>\n\t\tThe City's pay gaps are not due to a few problematic agencies or titles,\n\t\trather they are the result of occupational segregation across the City's\n\t\tworkforce. One way to address these issues is to promote greater\n\t\tdiversity in well-paid career tracks that are currently predominantly\n\t\theld by male and white employees. Via simulations, we show that if such\n\t\tcareers are diversified over time the City's gender and racial pay gaps\n\t\twill significantly narrow. To make progress on diversification, the\n\t\tCouncil proposes distributing workplace culture surveys to gain a deeper\n\t\tunderstanding of why occupational segregation exists and how to best\n\t\taddress it.\n\t</p>\n\t<p>\n\t\tThe Council proposes career counseling services to assist municipal\n\t\temployees in lower-paying jobs, which are currently predominantly held\n\t\tby female and ABHLO employees. Counseling on professional growth and\n\t\tpromotional opportunities would help employees to move up their current\n\t\tcareer ladder or to move to better-paying municipal careers.\n\t\tAdditionally, the Council looks forward to the results of the City's\n\t\tforthcoming comparable worth analysis, which will assess whether\n\t\tmunicipal titles are being paid equitably and could potentially help\n\t\tnarrow the City's pay gaps.\n\t</p>\n</Section>\n\n<Divider />\n\n<Section>\n\t<h2>Pay Gaps in the Municipal Workforce</h2>\n\n\t<blockquote class=\"text-indent\" style=\"margin-top:50px\">\n\t\t\"Large pay gaps between male and female and white and ABHLO employees\n\t\tare almost completely explained by occupational segregation.\"\n\t</blockquote>\n</Section>\n\n<Section>\n\t<p>\n\t\tThe Data Team compared the average salaries for male and female and for\n\t\twhite and ABHLO employees in order to calculate the Citywide gender and\n\t\tracial pay gaps. The findings from these comparisons are presented\n\t\tbelow. Additionally, we show that occupational segregation by gender and\n\t\trace almost completely explains these pay gaps.\n\t</p>\n\t<p style=\"color:#949494\">\n\t\tNote: Below we use the arithmetic mean to calculate average salaries.\n\t\tPast Data Team \"Pay Equity\" reports have used median salary-based pay\n\t\tgaps. See the full <a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"http://council.nyc.gov/data/wp-content/uploads/sites/73/2024/04/PayDisparitiesReport2024.pdf\"\n\t\t\ttarget=\"_blank\">report</a\n\t\t> for the median-based pay gaps.\n\t</p>\n</Section>\n\n<Scroller threshold=\"1\" bind:index={genderGapFigIndex} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"chart-ScrollFig\">\n\t\t\t\t<BarChart\n\t\t\t\t\tdata={genderGapData}\n\t\t\t\t\txKey=\"Earnings\"\n\t\t\t\t\tyKey=\"Group\"\n\t\t\t\t\tidKey=\"Group\"\n\t\t\t\t\tpadding={{ top: 0, bottom: 0, left: 60, right: 15 }}\n\t\t\t\t\txPrefix=\"$\"\n\t\t\t\t\tspacing=\"0.15\"\n\t\t\t\t\thover={true}\n\t\t\t\t\tselected={genderGapFigSelect}\n\t\t\t\t\tlabels={true}\n\t\t\t\t\tlabelKey=\"Earnings\"\n\t\t\t\t\tprefixLabel=\"$\"\n\t\t\t\t\tvertLabShift=\"40\"\n\t\t\t\t\txTicks={[0, 0.5, 1]}\n\t\t\t\t\ttitle=\"Gender Pay Gap\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section genderGapFigIndex=\"1\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tTo begin, let's examine the <b>gender pay gap</b>, where we\n\t\t\t\t\tuse male employees as our reference group. In the figure,\n\t\t\t\t\tthis is signified by male employees making a full dollar.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section genderGapFigIndex=\"2\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tFemale employees make less than males&mdash;on average,\n\t\t\t\t\tfemale employees earn $0.835 for every $1 that male\n\t\t\t\t\temployees make. In other words, there is a <b\n\t\t\t\t\t\t>$0.165 per dollar gender pay gap</b\n\t\t\t\t\t> in NYC's municipal workforce.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section genderGapFigIndex=\"3\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tHowever, within the same job title, female employees earn\n\t\t\t\t\tmore than $0.99 for every $1 that male employees make. Thus,\n\t\t\t\t\toccupational segregation almost completely explains the\n\t\t\t\t\tgender pay gap.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Scroller threshold=\"1\" bind:index={raceGapFigIndex} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"chart-ScrollFig\">\n\t\t\t\t<BarChart\n\t\t\t\t\tdata={raceGapData}\n\t\t\t\t\txKey=\"Earnings\"\n\t\t\t\t\tyKey=\"Group\"\n\t\t\t\t\tidKey=\"Group\"\n\t\t\t\t\tpadding={{ top: 0, bottom: 0, left: 60, right: 15 }}\n\t\t\t\t\txPrefix=\"$\"\n\t\t\t\t\tspacing=\"0.15\"\n\t\t\t\t\thover={true}\n\t\t\t\t\tselected={raceGapFigSelect}\n\t\t\t\t\tlabels={true}\n\t\t\t\t\tlabelKey=\"Earnings\"\n\t\t\t\t\tprefixLabel=\"$\"\n\t\t\t\t\tvertLabShift={40}\n\t\t\t\t\txTicks={[0, 0.5, 1]}\n\t\t\t\t\ttitle=\"Racial Pay Gap\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section raceGapFigIndex=\"1\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tNow, let's look at the <b>racial pay gap</b>, where we use\n\t\t\t\t\twhite employees as our reference group. This is signified in\n\t\t\t\t\tthe figure by white employees making a full dollar.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section raceGapFigIndex=\"2\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tABHLO employees make less than white employees&mdash;on\n\t\t\t\t\taverage, ABHLO employees earn $0.842 for every $1 that white\n\t\t\t\t\temployees make. I.e., there is a <b\n\t\t\t\t\t\t>$0.158 per dollar racial pay gap</b\n\t\t\t\t\t>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section raceGapFigIndex=\"3\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tAs with gender, within the same job title, ABHLO employees\n\t\t\t\t\tearn more than $0.99 for every $1 that white employees make.\n\t\t\t\t\tI.e., occupational segregation almost completely explains\n\t\t\t\t\tthe racial pay gap.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Scroller threshold=\"1\" bind:index={combinedGapFigIndex} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"chart-ScrollFig\">\n\t\t\t\t<BarChart\n\t\t\t\t\tdata={combinedGapData}\n\t\t\t\t\txKey=\"Earnings\"\n\t\t\t\t\tyKey=\"Group\"\n\t\t\t\t\tidKey=\"Group\"\n\t\t\t\t\tpadding={{ top: 0, bottom: 0, left: 60, right: 15 }}\n\t\t\t\t\txPrefix=\"$\"\n\t\t\t\t\tspacing=\"0.15\"\n\t\t\t\t\thover={true}\n\t\t\t\t\tselected={combinedGapFigSelect}\n\t\t\t\t\tlabels={true}\n\t\t\t\t\tlabelKey=\"Earnings\"\n\t\t\t\t\tprefixLabel=\"$\"\n\t\t\t\t\tvertLabShift={40}\n\t\t\t\t\txTicks={[0, 0.5, 1]}\n\t\t\t\t\ttitle=\"Combined Pay Gap\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section combinedGapFigIndex=\"1\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tFinally, we combine race and gender to look at the <b\n\t\t\t\t\t\t>\"combined\" pay gap</b\n\t\t\t\t\t>, where we use white male employees as our reference group.\n\t\t\t\t\tThis is signified in the figure by white male employees\n\t\t\t\t\tmaking a full dollar.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section combinedGapFigIndex=\"2\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tWhite male employees make more than others&mdash;on average,\n\t\t\t\t\tall other employees earn $0.815 for every $1 that white male\n\t\t\t\t\temployees make. I.e., there is a <b\n\t\t\t\t\t\t>$0.185 per dollar combined pay gap</b\n\t\t\t\t\t>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section combinedGapFigIndex=\"3\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tAs above, this pay gap is due to occupational segregation.\n\t\t\t\t\tWithin the same job title, all other employees earn about\n\t\t\t\t\t$0.99 for every $1 that white male employees make.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Section>\n\t<p>\n\t\tTo understand these pay gaps better, let's zoom in on the City's\n\t\tagencies. In the table below, we list the five agencies with the highest\n\t\tshares of ABHLO female employees. The median salary for the City's\n\t\tworkforce is $76k and we can see that all five of these agencies have\n\t\tmedian salaries below the City's median. The reverse pattern emerges\n\t\twhen considering the five agencies with the lowest shares of ABHLO\n\t\tfemale employees&mdash;those agencies all have median salaries above the\n\t\tCity’s median.\n\t</p>\n</Section>\n\n<Media col=\"medium\" caption=\"\">\n\t<div class=\"chart-sml\">\n\t\t<Table\n\t\t\ttableData={$highNonWhiteFemaleAgencyData}\n\t\t\ttitle=\"Agencies with Highest Shares of ABHLO Female Employees\"\n\t\t/>\n\t</div>\n</Media>\n<Media col=\"medium\" caption=\"\">\n\t<div class=\"chart-sml\">\n\t\t<Table\n\t\t\ttableData={$lowNonWhiteFemaleAgencyData}\n\t\t\ttitle=\"Agencies with Lowest Shares of ABHLO Female Employees\"\n\t\t/>\n\t</div>\n</Media>\n\n<Section>\n\t<p>\n\t\tThis is a general pattern&mdash;<b\n\t\t\t>across agencies, as the share of ABHLO female employees rises,\n\t\t\tmedian salary tends to fall</b\n\t\t>. Segregation and pay disparities across agencies contribute to the\n\t\tCitywide pay gaps we saw above.\n\t</p>\n\t<p>\n\t\tHowever, segregation is not only an <i>across-agency</i> issue, it is\n\t\talso a problem\n\t\t<i>within</i> agencies. As can be seen in the figure below,\n\t\t<b\n\t\t\t>job titles with higher shares of ABHLO female employees tend to be\n\t\t\tpaid less</b\n\t\t>, with some exceptions among select high-ranking positions, which\n\t\temploy very few people.\n\t</p>\n\t<!-- <p>\n\t\tThe figure below visualizes this relationship. It plots a job title's\n\t\tmedian salary by the title's share of non-white female employees. The\n\t\thorizontal axis is binned&mdash;from left-to-right, the bins are 0-10%,\n\t\t10-20%, . . ., 90-100%. Many employees work in titles with a 0-20%\n\t\tnon-white female employee share and, on average, these titles have\n\t\tmedian salaries of $85k or higher. In contrast, the next largest group\n\t\tis titles with a 60-70% non-white female employee share and, on average,\n\t\tthese titles only have a median salary of $51k.\n\t</p> -->\n</Section>\n\n<Media col=\"medium\" caption=\"\">\n\t<div class=\"chart-sml\">\n\t\t<ScatterChart\n\t\t\tdata={salaryByFracNonWhiteFemaleData}\n\t\t\txKey=\"Share\"\n\t\t\txSuffix=\"%\"\n\t\t\txMax=\"101\"\n\t\t\tyKey=\"MedSalary\"\n\t\t\tyMin=\"20000\"\n\t\t\tyMax=\"120000\"\n\t\t\tyPrefix=\"$\"\n\t\t\trKey=\"NumWorkers\"\n\t\t\tlabelKey=\"Format\"\n\t\t\tr={[2, 10]}\n\t\t\txTicks={[0, 25, 50, 75, 100]}\n\t\t\ttitle=\"Job Title Median Salary by Share of ABHLO Female Employees\"\n\t\t\tfooter=\"Note: Circle size is proportional to number of \n\t\t\temployees in each bin.\"\n\t\t\tlabels={true}\n\t\t\tselect={true}\n\t\t\thover={true}\n\t\t\tpadding={{ top: 5, bottom: 15, left: 90, right: 0 }}\n\t\t/>\n\t</div>\n</Media>\n\n<Divider />\n\n<Section>\n\t<blockquote class=\"text-indent\" style=\"margin-top:50px\">\n\t\t\"The City's pay gaps largely result from the low salaries paid to ABHLO\n\t\tfemale employees.\"\n\t</blockquote>\n\n\t<p>\n\t\tAlthough the above analysis focused on ABHLO female employees, it also\n\t\tapplies to female and ABHLO employees separately. The results are more\n\t\tstark for ABHLO female employees, however. This is because ABHLO female\n\t\temployees are concentrated in particularly low-paying roles, even\n\t\trelative to white female and ABHLO male employees.\n\t</p>\n\t<p>\n\t\tIn fact, the City's pay gaps largely result from the low salaries paid\n\t\tto ABHLO female employees. We show this below by decomposing how white\n\t\tfemale, ABHLO female, and ABHLO male employees separately contribute to\n\t\tthe City's pay gaps.\n\t</p>\n</Section>\n\n<Scroller threshold=\"1\" bind:index={genderDecompFigIndex} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"chart-ScrollFig\">\n\t\t\t\t<BarChart\n\t\t\t\t\tdata={genderDecompData}\n\t\t\t\t\txKey=\"Component\"\n\t\t\t\t\tyKey=\"Group\"\n\t\t\t\t\tidKey=\"id\"\n\t\t\t\t\tpadding={{ top: 0, bottom: 0, left: 60, right: 15 }}\n\t\t\t\t\txPrefix=\"$\"\n\t\t\t\t\tspacing=\"0.15\"\n\t\t\t\t\thover={true}\n\t\t\t\t\tselected={genderDecompFigSelect}\n\t\t\t\t\tlabels={true}\n\t\t\t\t\tlabelKey=\"Label\"\n\t\t\t\t\tvertLabShift={40}\n\t\t\t\t\ttitle=\"Gender Pay Gap Decomposition\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section genderDecompFigIndex=\"1\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tLet's reexamine the gender pay gap, where male employees are\n\t\t\t\t\tthe reference group. Earlier, we saw that female employees\n\t\t\t\t\tearn $0.165 per dollar <i>less</i> than male employees on average.\n\t\t\t\t</p>\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\t\"Female employees\" are made up of white and ABHLO female\n\t\t\t\t\temployees. How much of the gender pay gap is attributable to\n\t\t\t\t\tthe lower wages of each of these two groups?\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section genderDecompFigIndex=\"2\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tWe find that <b\n\t\t\t\t\t\t>white female employees account for $0.025 or 15%</b\n\t\t\t\t\t> of the gender pay gap. That is, if white female employees were\n\t\t\t\t\tpaid the same as male employees (keeping ABHLO female employees'\n\t\t\t\t\tsalaries as-is), the gender pay gap would be 15% smaller.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section genderDecompFigIndex=\"3\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tThat means that <b\n\t\t\t\t\t\t>ABHLO female employees account for $0.141 or 85%</b\n\t\t\t\t\t> of the gap. I.e., if ABHLO female employees earned the same\n\t\t\t\t\tas male employees, the gender pay gap would shrink by 85%.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Scroller threshold=\"1\" bind:index={raceDecompFigIndex} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"chart-ScrollFig\">\n\t\t\t\t<BarChart\n\t\t\t\t\tdata={raceDecompData}\n\t\t\t\t\txKey=\"Component\"\n\t\t\t\t\tyKey=\"Group\"\n\t\t\t\t\tidKey=\"id\"\n\t\t\t\t\tpadding={{ top: 0, bottom: 0, left: 60, right: 15 }}\n\t\t\t\t\txPrefix=\"$\"\n\t\t\t\t\tspacing=\"0.15\"\n\t\t\t\t\thover={true}\n\t\t\t\t\tselected={raceDecompFigSelect}\n\t\t\t\t\tlabels={true}\n\t\t\t\t\tlabelKey=\"Label\"\n\t\t\t\t\tvertLabShift={40}\n\t\t\t\t\ttitle=\"Racial Pay Gap Decomposition\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section raceDecompFigIndex=\"1\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tNow, let's return to the racial pay gap, where white\n\t\t\t\t\temployees are the reference group. We saw that ABHLO\n\t\t\t\t\temployees earn $0.158 per dollar <i>less</i> than white employees\n\t\t\t\t\ton average.\n\t\t\t\t</p>\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\t\"ABHLO employees\" are made up of ABHLO male and ABHLO female\n\t\t\t\t\temployees. How much of the racial pay gap is attributable to\n\t\t\t\t\tthe lower wages of each of these two groups?\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section raceDecompFigIndex=\"2\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tWe find that <b\n\t\t\t\t\t\t>ABHLO male employees account for $0.051 or 32.4%</b\n\t\t\t\t\t> of the racial pay gap. That is, if ABHLO male employees were\n\t\t\t\t\tpaid the same as white employees (keeping ABHLO female employees'\n\t\t\t\t\tsalaries as-is), the racial pay gap would be one-third smaller.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section raceDecompFigIndex=\"3\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\t<b>ABHLO female employees account for $0.107 or 67.6%</b> of\n\t\t\t\t\tthe gap. I.e., if ABHLO female employees earned the same as white\n\t\t\t\t\temployees, the racial pay gap would shrink by two-thirds.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Scroller threshold=\"1\" bind:index={combinedDecompFigIndex} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"chart-ScrollFig\">\n\t\t\t\t<BarChart\n\t\t\t\t\tdata={combinedDecompData}\n\t\t\t\t\txKey=\"Component\"\n\t\t\t\t\tyKey=\"Group\"\n\t\t\t\t\tidKey=\"id\"\n\t\t\t\t\tpadding={{ top: 0, bottom: 0, left: 60, right: 15 }}\n\t\t\t\t\txPrefix=\"$\"\n\t\t\t\t\tspacing=\"0.15\"\n\t\t\t\t\thover={true}\n\t\t\t\t\tselected={combinedDecompFigSelect}\n\t\t\t\t\tlabels={true}\n\t\t\t\t\tlabelKey=\"Label\"\n\t\t\t\t\tvertLabShift={30}\n\t\t\t\t\ttitle=\"Combined Pay Gap Decomposition\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section combinedDecompFigIndex=\"1\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tFinally, let's look at the \"combined\" pay gap, where white\n\t\t\t\t\tmale employees are the reference group. Earlier, we saw that\n\t\t\t\t\tall other employees earn $0.185 per dollar <i>less</i> than white\n\t\t\t\t\tmale employees on average.\n\t\t\t\t</p>\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\t\"All other employees\" include white female, ABHLO male, and\n\t\t\t\t\tABHLO female employees. How much of the combined pay gap is\n\t\t\t\t\tattributable to the lower wages of each of these three\n\t\t\t\t\tgroups?\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section combinedDecompFigIndex=\"2\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tWe find that <b\n\t\t\t\t\t\t>white female employees account for $0.024 or 13.1%</b\n\t\t\t\t\t> of the combined pay gap. That is, if white female employees\n\t\t\t\t\twere paid the same as white male employees (keeping ABHLO male\n\t\t\t\t\tand female employees' salaries as-is), the combined pay gap would\n\t\t\t\t\tbe 13.1% smaller.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section combinedDecompFigIndex=\"3\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\t<b>ABHLO male employees account for $0.058 or 31.5%</b> of the\n\t\t\t\t\tgap. I.e., if ABHLO male employees earned the same as white male\n\t\t\t\t\temployees, the combined pay gap would shrink by 31.5%.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section combinedDecompFigIndex=\"4\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tTherefore, <b\n\t\t\t\t\t\t>ABHLO female employees account for $0.103 or 55.4%</b\n\t\t\t\t\t> of the gap. I.e., if ABHLO female employees earned the same\n\t\t\t\t\tas white male employees, the combined pay gap would shrink by\n\t\t\t\t\t55.4%.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Section>\n\t<h2>A Pathway Towards Closing Pay Gaps</h2>\n\n\t<blockquote class=\"text-indent\" style=\"margin-top:50px\">\n\t\t\"Diversifying a few significant, well-paying career tracks can markedly\n\t\treduce the City's pay gaps.\"\n\t</blockquote>\n</Section>\n\n<Section>\n\t<p>\n\t\tThe City’s gender and racial pay gaps are not due to a few problematic\n\t\tagencies or titles, rather they are the result of occupational\n\t\tsegregation throughout the City's workforce and pay disparities across\n\t\toccupations. These issues fall particularly hard on ABHLO female\n\t\temployees.\n\t</p>\n\t<p>\n\t\tTo help narrow the City's pay gaps, the Data Team found that one\n\t\teffective strategy would be to diversify well-paid career tracks that\n\t\tare currently predominantly held by male and white employees. Below, we\n\t\tsimulate the impact of this approach using a short list of titles that\n\t\thave a \"high return\" to this intervention, in terms of reducing pay\n\t\tgaps. Our results demonstrate that diversifying a few significant,\n\t\twell-paying career tracks can markedly reduce the City's pay gaps. The\n\t\ttitles used in our simulations are just examples&mdash;diversification\n\t\tof similar titles beyond those listed would lead to further reduction of\n\t\tthe pay gaps.\n\t</p>\n</Section>\n\n<!-- <Scroller threshold=\"1\" splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"scroll_tableLong\">\n\t\t\t\t<Table\n\t\t\t\t\ttableData={$lowNonWhiteData}\n\t\t\t\t\ttitle=\"Populous Titles Held by Mostly Non-White Workers\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tThe 17 jobs in this table employ 28,400 workers and employ\n\t\t\t\t\tmostly non-white workers. On average, their salaries are\n\t\t\t\t\t$28,700 below the City’s median pay ($76k).\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tIf we raised salaries for these titles to the City median,\n\t\t\t\t\twhat would happen to the racial pay gap?\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tWe find that this scenario would <b\n\t\t\t\t\t\t>reduce the racial pay gap by 33%</b\n\t\t\t\t\t>. This would cost $1.3B in additional total labor cost,\n\t\t\t\t\tequivalent to 1.2% of the City’s $107B budget.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tAlternatively, <b\n\t\t\t\t\t\t>each $1,000 salary increase for these titles would\n\t\t\t\t\t\treduce the racial pay gap by 1.16%</b\n\t\t\t\t\t> and it would cost $45.8M in additional total labor cost.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tFurthermore, as you can see in the table, these 17\n\t\t\t\t\tlow-paying titles are also female-dominated. Therefore,\n\t\t\t\t\traising salaries for these titles to the City median would\n\t\t\t\t\tnot only reduce the racial pay gap, it would also <b\n\t\t\t\t\t\t>reduce the gender pay gap by 45% (or 1.58% for every\n\t\t\t\t\t\t$1,000 salary increase)</b\n\t\t\t\t\t>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider /> -->\n\n<Scroller threshold=\"1\" splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"scroll_tableShort\">\n\t\t\t\t<Table\n\t\t\t\t\ttableData={$midMaleData}\n\t\t\t\t\ttitle=\"Populous Titles Predominantly Held by Male Employees\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tThe nine titles in this table pay well and are predominantly\n\t\t\t\t\theld by male employees. In total, they employ 49,000\n\t\t\t\t\tworkers, only 19% of whom are female. In contrast, NYC's\n\t\t\t\t\toverall workforce is 52% female.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tWhat would happen to the gender pay gap if the gender\n\t\t\t\t\tcomposition of these titles matched that of NYC's workforce?\n\t\t\t\t\tWe find that this scenario would lead to a modest <b\n\t\t\t\t\t\t>reduction in the gender pay gap of 4.3%</b\n\t\t\t\t\t>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tHowever, if both genders remain in these roles and fair\n\t\t\t\t\tpromotion practices are used, greater diversity in these\n\t\t\t\t\t\"entry-level\" jobs would be expected to percolate up to\n\t\t\t\t\thigher-level positions over time.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Scroller threshold=\"1\" splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"scroll_tableShort\" style=\"font-size: 0.7em\">\n\t\t\t\t<Table\n\t\t\t\t\ttableData={$highMaleData}\n\t\t\t\t\ttitle=\"Advanced, Populous Titles Predominantly Held by Male Employees\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tThe nine titles in this table are higher up the career\n\t\t\t\t\tladder than those listed in the previous table. These\n\t\t\t\t\thigh-level titles pay well, employ 14,000 workers, and are\n\t\t\t\t\tcurrently 86.5% male.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tWhat would happen to the gender pay gap if the gender\n\t\t\t\t\tcomposition of all 18 of these titles matched that of NYC's\n\t\t\t\t\tworkforce? We find that this scenario would <b\n\t\t\t\t\t\t>reduce the gender pay gap by 37%</b\n\t\t\t\t\t>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"font-family:Georgia\">\n\t\t\t\t\tAlternatively, for every <b\n\t\t\t\t\t\t>one percentage point increase in female representation\n\t\t\t\t\t\tin these roles, the gender pay gap would decrease by\n\t\t\t\t\t\t0.98%</b\n\t\t\t\t\t>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Section>\n\t<p>\n\t\tWe can apply the same approach to race/ethnicity. The two tables below\n\t\tlist nine \"entry-level\" and nine \"high-level\" titles that are all\n\t\tpredominantly held by white employees. These titles largely overlap with\n\t\tthe 18 titles listed above. The nine \"entry-level\" jobs employ 44,000\n\t\tworkers, 55% of whom are white. The nine \"higher-level\" titles employ\n\t\t14,000 workers and are over 60% white. In contrast, the racial\n\t\tcomposition of NYC's overall workforce is 68% ABHLO and 32% white.\n\t</p>\n\t<p>\n\t\tIf the racial composition of these 18 titles matched that of NYC's\n\t\tworkforce, what would happen to the racial pay gap? We find that such a\n\t\tscenario would lead to a <b>reduction in the racial pay gap of 24%</b>.\n\t\tAlternatively, for every\n\t\t<b\n\t\t\t>one percentage point increase in ABHLO representation in these\n\t\t\troles, the racial pay gap would decrease by 0.84%</b\n\t\t>.\n\t</p>\n</Section>\n\n<Media col=\"medium\" caption=\"\">\n\t<div class=\"chart-sml\">\n\t\t<Table\n\t\t\ttableData={$midWhiteData}\n\t\t\ttitle=\"Populous Titles Predominantly Held by White Employees\"\n\t\t/>\n\t</div>\n</Media>\n\n<Media col=\"medium\" caption=\"\">\n\t<div class=\"chart-sml\">\n\t\t<Table\n\t\t\ttableData={$highWhiteData}\n\t\t\ttitle=\"Advanced, Populous Titles Predominantly Held by White Employees\"\n\t\t/>\n\t</div>\n</Media>\n\n<Divider />\n\n<Section>\n\t<p>\n\t\tAdmittedly, diversifying the career tracks mentioned is easier said than\n\t\tdone. While steps have already been taken to improve diversity, cultural\n\t\tand workplace barriers prevent more female and ABHLO employees from\n\t\tjoining and continuing in these careers. With this in mind, the Council\n\t\tproposes distributing workplace culture surveys to gain a deeper\n\t\tunderstanding of why occupational segregation exists and how to best\n\t\taddress it.\n\t</p>\n\t<p>\n\t\tIn addition to diversifying well-paying careers, the City should support\n\t\tmunicipal workers in lower-paying roles, which are currently\n\t\tpredominantly held by female and ABHLO employees. To this end, the\n\t\tCouncil proposes offering career counseling services which would connect\n\t\temployees with professional growth and promotional opportunities,\n\t\thelping employees to move up their current career ladder or to move to\n\t\tbetter-paying municipal careers. Additionally, the Council looks forward\n\t\tto the results of the City's forthcoming comparable worth analysis,\n\t\twhich will assess whether municipal titles are being paid equitably and\n\t\tcould potentially help narrow the City's pay gaps.\n\t</p>\n\t<p>\n\t\tFor further analysis, read the Data Team's full report <a\n\t\t\tstyle=\"color:inherit\"\n\t\t\thref=\"http://council.nyc.gov/data/wp-content/uploads/sites/73/2024/04/PayDisparitiesReport2024.pdf\"\n\t\t\ttarget=\"_blank\">here</a\n\t\t>.\n\t</p>\n</Section>\n\n<DataTeamFooter />\n\n<style>\n\t:global(svelte-scroller-foreground) {\n\t\tpointer-events: none !important;\n\t}\n\t:global(svelte-scroller-foreground section div) {\n\t\tpointer-events: all !important;\n\t}\n\t.scroll_tableLong {\n\t\tmargin-top: 5vh;\n\t\twidth: calc(75%);\n\t}\n\t.scroll_tableShort {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tpadding-top: 15%;\n\t\tpadding-left: 5%;\n\t\tpadding-right: 5%;\n\t\tfont-size: 0.8em;\n\t}\n\t.chart-ScrollFig {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tpadding-top: 30%;\n\t\tpadding-left: 17%;\n\t\tpadding-right: 10%;\n\t\tfont-size: 0.8em;\n\t}\n\t.chart-sml {\n\t\tpadding-left: 2%;\n\t\tpadding-right: 2%;\n\t\tfont-size: 0.8em;\n\t}\n</style>\n",
    "<script>\n    import { themes } from \"../config.js\";\n    import { getContext } from \"svelte\";\n\n    export let theme = getContext(\"theme\");\n</script>\n\n<footer\n    style=\"color: {themes[theme]['text']}; background-color: {themes[theme][\n        'pale'\n    ]};\"\n>\n    <div class=\"col-wide\" data-analytics=\"footer\">\n        <a href=\"https://council.nyc.gov/data/\" target=\"_blank\">\n            {#if theme == \"dark\"}\n                <img\n                    class=\"logo-img\"\n                    src=\"./img/DataTeamLogo.png\"\n                    alt=\"New York City Council Data Team\"\n                />\n            {:else}\n                <img\n                    class=\"logo-img\"\n                    src=\"./img/DataTeamLogo.png\"\n                    alt=\"New York City Council Data Team\"\n                />\n            {/if}\n        </a>\n        <ul>\n            <li>\n                <a\n                    href=\"mailto:datainfo@council.nyc.gov\"\n                    class=\"link\"\n                    style=\"color: {themes[theme]['text']}; font-family:Georgia\"\n                    >Contact us</a\n                >\n            </li>\n        </ul>\n        <hr style=\"border-top-color: {themes[theme]['muted']}\" />\n        <div class=\"license\">\n            <!-- <p style=\"font-family:Georgia\">\n                Any opinion, findings, and conclusions or recommendations\n                expressed in this material are those of the authors and do not\n                necessarily reflect the views of the NYC Council. All errors are\n                our own.\n            </p> -->\n\n            <p style=\"font-family:Georgia\">\n                Webpage adapted from the template available <a\n                    href=\"https://github.com/onsvisual/svelte-scrolly\"\n                    target=\"_blank\"\n                    style=\"color: {themes[theme]['text']}\">here</a\n                >.\n            </p>\n        </div>\n    </div>\n</footer>\n\n<style>\n    footer {\n        padding-bottom: 72px;\n        padding-top: 36px;\n        font-size: 18px;\n    }\n    footer a.link {\n        -webkit-box-sizing: border-box;\n        box-sizing: border-box;\n        text-decoration: underline;\n        display: inline-block;\n    }\n    footer a.link:hover {\n        text-decoration: none;\n    }\n    footer a.link:active {\n        outline: 3px solid transparent;\n        background-color: #fd0;\n        -webkit-box-shadow:\n            0 -2px #fd0,\n            0 4px #222;\n        box-shadow:\n            0 -2px #fd0,\n            0 4px #222;\n        color: #222;\n        text-decoration: none;\n    }\n    footer hr {\n        margin-bottom: 27px;\n        margin-top: 36px;\n        border: none;\n        border-top: 1px solid #777;\n    }\n    ul {\n        padding: 0;\n        margin: 0;\n    }\n    li {\n        margin-right: 18px;\n        display: inline-block;\n    }\n    .logo-img {\n        margin-bottom: 27px;\n        width: 300px;\n    }\n    .ogl-img {\n        margin: 0 0.5rem 0.2rem 0;\n        width: 59px;\n        height: 24px;\n        vertical-align: middle;\n    }\n    .license {\n        vertical-align: top;\n    }\n    a img:hover {\n        cursor: pointer;\n    }\n</style>\n",
    "<script>\n    import { themes } from \"../config.js\";\n    import { getContext } from \"svelte\";\n\n    export let theme = getContext(\"theme\");\n    export let filled = false;\n    export let center = true;\n</script>\n\n<nav\n    style=\"border-bottom-color: {themes[theme]['muted']}; {filled\n        ? 'background-color: ' + themes[theme]['background'] + ';'\n        : ''}\"\n>\n    <div class=\"col-wide middle\" class:center>\n        <a href=\"https://council.nyc.gov/data/\" target=\"_blank\">\n            <picture>\n                {#if theme == \"dark\"}\n                    <img\n                        src=\"./img/DataTeamLogo.png\"\n                        alt=\"New York City Council Data Team\"\n                    />\n                {:else if filled == true}\n                    <img\n                        src=\"./img/DataTeamLogo.png\"\n                        alt=\"New York City Council Data Team\"\n                    />\n                {:else}\n                    <img\n                        src=\"./img/DataTeamLogo.png\"\n                        alt=\"New York City Council Data Team\"\n                    />\n                {/if}\n            </picture>\n        </a>\n    </div>\n</nav>\n\n<style>\n    nav {\n        -webkit-box-sizing: border-box;\n        box-sizing: border-box;\n        position: relative;\n        height: 75px;\n        border-bottom: 1px solid #777;\n        z-index: 1;\n    }\n    picture {\n        position: relative;\n        top: 0px;\n        padding: 0 5px;\n    }\n    img {\n        width: 330px;\n    }\n    a img:hover {\n        cursor: pointer;\n    }\n</style>\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n  export let theme = getContext('theme');\n  export let hr = true;\n</script>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-medium\">\n    {#if hr}\n    <hr style=\"color: {themes[theme]['muted']}\"/>\n    {:else}\n    <hr style=\"color: {themes[theme]['muted']}; border: none;\"/>\n    {/if}\n\t</div>\n</section>\n\n<style>\n  hr {\n    width: 75px;\n    border: none;\n    border-top: 2px solid;\n    margin: 40px auto -10px auto;\n  }\n</style>\n\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let center = true;\n\texport let wide = false;\n\texport let short = false;\n</script>\n\n<style>\n\tsection {\n\t\tpadding: 36px 0;\n\t}\n\t.short {\n\t\tmin-height: 70vh;\n\t}\n</style>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"middle\" class:center class:col-medium={!wide} class:col-wide={wide} class:height-full={!short} class:short>\n\t\t<slot></slot>\n\t</div>\n</section>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n  export let bgimage = null;\n  export let bgcolor = null;\n  export let bgfixed = false;\n  export let center = true;\n  export let short = false;\n\n  let style = '';\n\n  if (bgimage) {\n    style += `background-image: url(${bgimage});`;\n  } else {\n    style += 'background-image: none;';\n  }\n\n  if (bgfixed) {\n    style += ' background-attachment: fixed;';\n  }\n</script>\n\n<style>\n  .short {\n    min-height: 85vh;\n  }\n  .v-padded {\n    box-sizing: border-box;\n    padding: 40px 0;\n  }\n</style>\n\n<header style=\"color: {themes[theme]['text']}; background-color: {bgcolor ? bgcolor : themes[theme]['background']}; {style}\" class:short>\n\t<div class=\"v-padded col-wide middle\" style=\"position: relative\" class:short class:height-full={!short}>\n\t\t<div class:center>\n\t\t\t<slot></slot>\n    </div>\n\t</div>\n</header>",
    "<script>\n\timport { themes } from \"../config.js\";\n\timport { onMount, getContext } from \"svelte\";\n\timport { debounce } from \"debounce\";\n\n\tconst colWidths = {\n\t\tnarrow: 200,\n\t\tmedium: 300,\n\t\twide: 500,\n\t};\n\n\texport let theme = getContext(\"theme\");\n\texport let col = \"medium\";\n\texport let grid = null;\n\texport let caption = null;\n\texport let height = 200;\n\texport let gap = 12;\n\n\tlet gridClass = grid ? ` grid-${grid}` : '';\n\n\tlet nogrid = !(\"grid-gap\" in document.body.style);\n\t\n\tlet rowHeight = !Number.isNaN(height) ? height + \"px\" : height;\n\n\tlet gridGap = !Number.isNaN(gap) ? gap + \"px\" : gap;\n\n\t// The code below this point mimics CSS Grid functionality in IE 11\n\tconst minWidth = grid && colWidths[grid] ? colWidths[grid] : null;\n\n\tlet gridWidth;\n\tlet cols;\n\n\tlet el;\n\tlet divs;\n\tlet count;\n\n\tif (nogrid) {\n\t\tonMount(() => {\n\t\t\tresize();\n\t\t});\n\t}\n\n\tconst update = debounce(resize, 200);\n\n\tfunction resize() {\n\t\tif (el && !divs) {\n\t\t\tlet arr = [];\n\t\t\tlet children = el.childNodes;\n\t\t\tchildren.forEach((child) => {\n\t\t\t\tif (child.nodeName == \"DIV\") {\n\t\t\t\t\tarr.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdivs = arr;\n\t\t}\n\t\tcount = divs.length;\n\t\tcols = !minWidth || gridWidth <= minWidth ? 1 : Math.floor(gridWidth / minWidth);\n\t\tmakeCols();\n\t}\n\n\tfunction makeCols() {\n\t\tlet r =\n\t\t\tMath.ceil(count / cols) > 1\n\t\t\t\t? `-ms-grid-rows: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }]; grid-template-rows: 1fr repeat(${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }, ${gap}px 1fr);`\n\t\t\t\t: `-ms-grid-rows: 1fr; grid-template-rows: 1fr;`;\n\t\tlet c =\n\t\t\tcols > 1\n\t\t\t\t? `-ms-grid-columns: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tcols - 1\n\t\t\t\t  }]; grid-template-columns: 1fr repeat(${cols - 1}, ${gap}px 1fr);`\n\t\t\t\t: \"\";\n\t\tel.style.cssText = r + c;\n\t\tdivs.forEach((div, i) => {\n\t\t\tlet col = (i % cols) * 2 + 1;\n\t\t\tlet row = Math.floor(i / cols) * 2 + 1;\n\t\t\tdiv.style.cssText = `-ms-grid-column: ${col}; -ms-grid-row: ${row}; grid-column: ${col}; grid-row: ${row}; min-height: ${rowHeight};`;\n\t\t});\n\t}\n\n\t$: nogrid && (minWidth || gridWidth) && update();\n</script>\n\n{#if nogrid}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div bind:this={el} bind:clientWidth={gridWidth} class=\"grid-ms\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</figure>\n{:else}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div class=\"grid{gridClass}\" style=\"grid-gap: {gridGap}; min-height: {rowHeight}\">\n\t\t\t<slot></slot>\n\t\t</div>\n  </div>\n</figure>\n{/if}\n{#if caption}\n\t<caption style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t\t<div class=\"col-medium\">\n\t\t\t<div class=\"caption\">{@html caption}</div>\n\t\t</div>\n\t</caption>\n{/if}\n\n<style>\n\t.grid-ms {\n\t\tdisplay: grid;\n\t\tdisplay: -ms-grid;\n\t\t-ms-grid-columns: 1fr;\n\t\tgrid-template-columns: 1fr;\n\t\tmargin-top: 40px;\n\t}\n\t.grid {\n\t\tdisplay: -ms-grid;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fill, 100%);\n\t\tmargin: 40px 0 0 0;\n\t}\n\t.grid-narrow {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr)) !important;\n\t}\n\t.grid-medium {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr)) !important;\n\t}\n\t.grid-wide {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(500px, 1fr)) !important;\n\t}\n\t:global(.grid > div) {\n\t\tmin-height: inherit;\n\t}\n</style>\n",
    "<script context=\"module\">\r\n\t// Based on svelte-scroller by Rich Harris\r\n\t// https://github.com/sveltejs/svelte-scroller\r\n\t// Patched to transpile to IE 11 and allow for split-screen view option\r\n\r\n\tconst handlers = [];\r\n\tlet manager;\r\n\r\n\tif (typeof window !== \"undefined\") {\r\n\t\tconst run_all = () => handlers.forEach((fn) => fn());\r\n\r\n\t\twindow.addEventListener(\"scroll\", run_all);\r\n\t\twindow.addEventListener(\"resize\", run_all);\r\n\t}\r\n\r\n\tif (typeof IntersectionObserver !== \"undefined\") {\r\n\t\tconst map = new Map();\r\n\r\n\t\tconst observer = new IntersectionObserver(\r\n\t\t\t(entries, observer) => {\r\n\t\t\t\tentries.forEach((entry) => {\r\n\t\t\t\t\tconst update = map.get(entry.target);\r\n\t\t\t\t\tconst index = handlers.indexOf(update);\r\n\r\n\t\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\t\tif (index === -1) handlers.push(update);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tupdate();\r\n\t\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\trootMargin: \"400px 0px\", // TODO why 400?\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tmanager = {\r\n\t\t\tadd: ({ outer, update }) => {\r\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\r\n\r\n\t\t\t\tif (top < window.innerHeight && bottom > 0)\r\n\t\t\t\t\thandlers.push(update);\r\n\r\n\t\t\t\tmap.set(outer, update);\r\n\t\t\t\tobserver.observe(outer);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ outer, update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\r\n\t\t\t\tmap.delete(outer);\r\n\t\t\t\tobserver.unobserve(outer);\r\n\t\t\t},\r\n\t\t};\r\n\t} else {\r\n\t\tmanager = {\r\n\t\t\tadd: ({ update }) => {\r\n\t\t\t\thandlers.push(update);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport { onMount } from \"svelte\";\r\n\r\n\t// config\r\n\texport let top = 0;\r\n\texport let bottom = 1;\r\n\texport let threshold = 0.5;\r\n\texport let query = \"section\";\r\n\texport let parallax = false;\r\n\r\n\t// bindings\r\n\texport let index = 0;\r\n\texport let count = 0;\r\n\texport let offset = 0;\r\n\texport let progress = 0;\r\n\texport let visible = false;\r\n\texport let splitscreen = false; // Add class to allow for split screen option\r\n\texport let id = null;\r\n\r\n\tlet outer;\r\n\tlet bgContainer; // IE patch. Container binding to update inline style\r\n\tlet foreground;\r\n\tlet background;\r\n\tlet left;\r\n\tlet sections;\r\n\tlet wh = 0;\r\n\tlet fixed;\r\n\tlet offset_top;\r\n\tlet width = 1;\r\n\tlet height;\r\n\tlet inverted;\r\n\r\n\t$: top_px = Math.round(top * wh);\r\n\t$: bottom_px = Math.round(bottom * wh);\r\n\t$: threshold_px = Math.round(threshold * wh);\r\n\r\n\t$: top, bottom, threshold, parallax, update();\r\n\r\n\tonMount(() => {\r\n\t\tsections = foreground.querySelectorAll(query);\r\n\t\tcount = sections.length;\r\n\r\n\t\tupdate();\r\n\r\n\t\tconst scroller = { outer, update };\r\n\r\n\t\tmanager.add(scroller);\r\n\t\treturn () => manager.remove(scroller);\r\n\t});\r\n\r\n\t// IE patch. BG container style (fixed/unfixed) set via function\r\n\tfunction setFixed() {\r\n\t\tif (bgContainer) {\r\n\t\t\tlet style = `position: ${\r\n\t\t\t\tfixed ? \"fixed\" : \"absolute\"\r\n\t\t\t}; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${\r\n\t\t\t\tinverted ? 3 : 1\r\n\t\t\t};`;\r\n\t\t\tbgContainer.style.cssText = style;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction update() {\r\n\t\tif (!foreground) return;\r\n\r\n\t\t// re-measure outer container\r\n\t\tconst bcr = outer.getBoundingClientRect();\r\n\t\tleft = bcr.left;\r\n\t\twidth = bcr.right - bcr.left;\r\n\r\n\t\t// determine fix state\r\n\t\tconst fg = foreground.getBoundingClientRect();\r\n\t\tconst bg = background.getBoundingClientRect();\r\n\r\n\t\tvisible = fg.top < wh && fg.bottom > 0;\r\n\r\n\t\tconst foreground_height = fg.bottom - fg.top;\r\n\t\tconst background_height = bg.bottom - bg.top;\r\n\r\n\t\tconst available_space = bottom_px - top_px;\r\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\r\n\r\n\t\tif (progress <= 0) {\r\n\t\t\toffset_top = 0;\r\n\t\t\tif (fixed) {\r\n\t\t\t\tfixed = false;\r\n\t\t\t\tsetFixed();\r\n\t\t\t} // Non-IE specific patch to avoid setting style repeatedly\r\n\t\t} else if (progress >= 1) {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? foreground_height - background_height\r\n\t\t\t\t: foreground_height - available_space;\r\n\t\t\tif (fixed) {\r\n\t\t\t\tfixed = false;\r\n\t\t\t\tsetFixed();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? Math.round(\r\n\t\t\t\t\t\ttop_px -\r\n\t\t\t\t\t\t\tprogress * (background_height - available_space),\r\n\t\t\t\t  )\r\n\t\t\t\t: top_px;\r\n\t\t\tif (!fixed) {\r\n\t\t\t\tfixed = true;\r\n\t\t\t\tsetFixed();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (index = 0; index < sections.length; index += 1) {\r\n\t\t\tconst section = sections[index];\r\n\t\t\tconst { top } = section.getBoundingClientRect();\r\n\r\n\t\t\tconst next = sections[index + 1];\r\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\r\n\r\n\t\t\toffset = (threshold_px - top) / (bottom - top);\r\n\t\t\tid = section.dataset.id ? section.dataset.id : null;\r\n\t\t\tif (bottom >= threshold_px) break;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh} />\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\r\n\t<svelte-scroller-background-container\r\n\t\tclass=\"background-container\"\r\n\t\tbind:this={bgContainer}\r\n\t>\r\n\t\t<svelte-scroller-background bind:this={background}>\r\n\t\t\t<slot name=\"background\" />\r\n\t\t</svelte-scroller-background>\r\n\t</svelte-scroller-background-container>\r\n\r\n\t<svelte-scroller-foreground bind:this={foreground}>\r\n\t\t<slot name=\"foreground\" />\r\n\t</svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n\tsvelte-scroller-outer {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tmargin-left: 5%;\r\n\t\tmax-width: 90%;\r\n\t}\r\n\r\n\tsvelte-scroller-background {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground::after {\r\n\t\tcontent: \" \";\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\tsvelte-scroller-background-container {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tpointer-events: none;\r\n\t\t/* height: 100%; */\r\n\r\n\t\t/* in theory this helps prevent jumping */\r\n\t\twill-change: transform;\r\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n\t}\r\n</style>\r\n",
    "<script>\n    // code adapted from https://svelte.dev/repl/7b02f45e49744502bf5f03cb61375f9f?version=4.2.8\n    import Title from \"@onsvisual/svelte-charts/src/charts/shared/Title.svelte\";\n    import Footer from \"@onsvisual/svelte-charts/src/charts/shared/Footer.svelte\";\n\n    export let tableData = [\n        {\n            vitae: \"dolorem\",\n            lectus: \"ipsum\",\n            quisquam: \"quia\",\n        },\n        {\n            vitae: \"amet\",\n            lectus: \"consectetur\",\n            quisquam: \"adipisci\",\n        },\n    ];\n    export let title = null;\n    export let footer = null;\n    export let style = \"council\";\n</script>\n\n{#if title}\n    <Title>{title}</Title>\n{/if}\n<div class='table-container'>\n<table class={style}>\n    <thead>\n        <tr>\n            {#each Object.keys(tableData[0]) as columnHeading}\n                <th>{columnHeading}</th>\n            {/each}\n        </tr><tr />\n    </thead>\n    <tbody>\n        {#each Object.values(tableData) as row}\n            <tr>\n                {#each Object.values(row) as cell}\n                    <td>{cell}</td>\n                {/each}\n            </tr>\n        {/each}\n    </tbody>\n</table>\n</div>\n{#if footer}\n    <Footer>{footer}</Footer>\n{/if}\n\n<style>\n    table.council {\n        border: 1px solid #fefefe;\n        background-color: #fff;\n        color: #000;\n        width: 100%;\n        border-collapse: collapse;\n       \n    }\n    table.council thead {\n        background: #f2ede9;\n        white-space: nowrap;\n    }\n    table.council tr {\n        border-bottom: 1px solid #bcbcbc;\n    }\n    table.council th {\n        padding: 10px;\n    }\n    table.council td {\n        padding-top: 5px;\n        padding-bottom: 5px;\n    }\n    table.council tr:last-child {\n        border-bottom: 1px solid #fefefe;\n    }\n    table.council thead tr th:first-child {\n        font-size: 16px;\n        font-weight: bold;\n        text-align: left;\n        font-family: Georgia;\n    }\n    table.council thead tr th:not(:first-child) {\n        font-size: 16px;\n        font-weight: bold;\n        text-align: center;\n        font-family: Georgia;\n    }\n    table.council tbody tr td:first-child {\n        font-size: 14px;\n        text-align: left;\n        font-family: Georgia;\n    }\n    table.council tbody tr td:not(:first-child) {\n        font-size: 14px;\n        text-align: center;\n        font-family: Georgia;\n    }\n     .table-container{\n        overflow-x: auto;\n    }\n</style>\n",
    "<script>\n  export let color = \"black\";\n  export let animation = true;\n\texport let center = true;\n\n  const colors = [\"black\", \"white\"];\n\n  color = colors.includes(color) ? color : \"black\";\n</script>\n\n{#if center}\n<slot></slot><br/>\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/>\n{:else}\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow left\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/><slot></slot>\n{/if}\n\n<style>\n\t.arrow {\n\t\twidth: 48px;\n\t\theight: 48px;\n\t}\n\t.left {\n\t\tmargin-right: 10px;\n\t}\n\t.bounce {\n\t\t-webkit-animation-duration: 2s;\n\t\t        animation-duration: 2s;\n\t\t-webkit-animation-iteration-count: infinite;\n\t\t        animation-iteration-count: infinite;\n\t\t-webkit-animation-name: bounce;\n\t\t        animation-name: bounce;\n\t\t-webkit-animation-timing-function: ease;\n\t\t        animation-timing-function: ease;\n\t}\n\t@-webkit-keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n\t@keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}